{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/form-control-builder.ts","./src/app/common/unreachable-case.ts","./src/app/communication/command-enum.enum.ts","./src/app/communication/command-type.ts","./src/app/communication/commands/change-registry-view-command.ts","./src/app/communication/commands/filter-command.ts","./src/app/communication/commands/filter-status-command-data.ts","./src/app/communication/commands/nop-command.ts","./src/app/communication/commands/paging-command.ts","./src/app/communication/commands/reception-registry-loaded-command.ts","./src/app/communication/communicator.service.ts","./src/app/core/physical-preson.pipe.ts","./src/app/domain/enums/client-type-enum.enum.ts","./src/app/domain/enums/enum-type.ts","./src/app/domain/enums/order-item-status-enum.enum.ts","./src/app/domain/equipment-base.ts","./src/app/domain/order/equipment.ts","./src/app/models/constants.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/pages/admin/admin-page/admin-page.component.ts","./src/app/pages/admin/admin-page/admin-page.component.html","./src/app/pages/admin/admin-routing.module.ts","./src/app/pages/admin/admin.module.ts","./src/app/pages/dictionary/dictionary-page/dictionary-page.component.ts","./src/app/pages/dictionary/dictionary-page/dictionary-page.component.html","./src/app/pages/dictionary/dictionary-routing.module.ts","./src/app/pages/dictionary/dictionary.module.ts","./src/app/pages/reception/reception-edit-page/reception-edit-page.component.ts","./src/app/pages/reception/reception-edit-page/reception-edit-page.component.html","./src/app/pages/reception/reception-edit-page/reception-edit/client/client.component.ts","./src/app/pages/reception/reception-edit-page/reception-edit/client/client.component.html","./src/app/pages/reception/reception-edit-page/reception-edit/client/juridical-person/juridical-person.component.ts","./src/app/pages/reception/reception-edit-page/reception-edit/client/juridical-person/juridical-person.component.html","./src/app/pages/reception/reception-edit-page/reception-edit/client/physical-person/physical-person.component.ts","./src/app/pages/reception/reception-edit-page/reception-edit/client/physical-person/physical-person.component.html","./src/app/pages/reception/reception-edit-page/reception-edit/equipment/equipment.component.ts","./src/app/pages/reception/reception-edit-page/reception-edit/equipment/equipment.component.html","./src/app/pages/reception/reception-edit-page/reception-edit/order-status-view/order-status-view.component.ts","./src/app/pages/reception/reception-edit-page/reception-edit/order-status-view/order-status-view.component.html","./src/app/pages/reception/reception-edit-page/reception-edit/reception-edit.component.ts","./src/app/pages/reception/reception-edit-page/reception-edit/reception-edit.component.html","./src/app/pages/reception/reception-registry-page/reception-quick-filter/reception-quick-filter.component.ts","./src/app/pages/reception/reception-registry-page/reception-quick-filter/reception-quick-filter.component.html","./src/app/pages/reception/reception-registry-page/reception-registry-card/reception-registry-card.component.ts","./src/app/pages/reception/reception-registry-page/reception-registry-card/reception-registry-card.component.html","./src/app/pages/reception/reception-registry-page/reception-registry-filter/reception-registry-filter.component.ts","./src/app/pages/reception/reception-registry-page/reception-registry-filter/reception-registry-filter.component.html","./src/app/pages/reception/reception-registry-page/reception-registry-page.component.ts","./src/app/pages/reception/reception-registry-page/reception-registry-page.component.html","./src/app/pages/reception/reception-registry-page/reception-registry-paginator/reception-registry-paginator.component.ts","./src/app/pages/reception/reception-registry-page/reception-registry-paginator/reception-registry-paginator.component.html","./src/app/pages/reception/reception-registry-page/reception-registry-table/reception-registry-table.component.ts","./src/app/pages/reception/reception-registry-page/reception-registry-table/reception-registry-table.component.html","./src/app/pages/reception/reception-registry-page/reception-registry-view-toggle/reception-registry-view-toggle.component.ts","./src/app/pages/reception/reception-registry-page/reception-registry-view-toggle/reception-registry-view-toggle.component.html","./src/app/pages/reception/reception-routing.module.ts","./src/app/pages/reception/reception.module.ts","./src/app/pages/repair/repair-page/repair-page.component.ts","./src/app/pages/repair/repair-page/repair-page.component.html","./src/app/pages/repair/repair-routing.module.ts","./src/app/pages/repair/repair.module.ts","./src/app/pages/warehouse/warehouse-page/warehouse-page.component.ts","./src/app/pages/warehouse/warehouse-page/warehouse-page.component.html","./src/app/pages/warehouse/warehouse-routing.module.ts","./src/app/pages/warehouse/warehouse.module.ts","./src/app/services/ClientService/client.service.ts","./src/app/services/EquipmentService/equipment.service.ts","./src/app/services/ReceptionService/reception.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAC2B;;;AAElF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAC,WAAW,EAAE,YAAY,EAAC,GAAE,EAAE,CAAC,gKAA4C,CAAC,IAAI,CAAC,CAAC,GAAE,EAAC,CAAC,eAAe,CAAC;KAC5G;IACD;QACE,IAAI,EAAC,QAAQ,EAAE,YAAY,EAAC,GAAE,EAAE,CAAC,oJAAsC,CAAC,IAAI,CAAC,CAAC,GAAE,EAAC,CAAC,YAAY,CAAC;KAChG;IACD;QACE,IAAI,EAAC,YAAY,EAAE,YAAY,EAAC,GAAE,EAAE,CAAC,oKAA8C,CAAC,IAAI,CAAC,CAAC,GAAE,EAAC,CAAC,gBAAgB,CAAC;KAChH;IACD;QACE,IAAI,EAAC,WAAW,EAAE,YAAY,EAAC,GAAE,EAAE,CAAC,gKAA4C,CAAC,IAAI,CAAC,CAAC,GAAE,EAAC,CAAC,eAAe,CAAC;KAC5G;IACD;QACE,IAAI,EAAC,OAAO,EAAE,YAAY,EAAC,GAAE,EAAE,CAAC,gJAAoC,CAAC,IAAI,CAAC,CAAC,GAAE,EAAC,CAAC,WAAW,CAAC;KAC5F;IACD;QACE,IAAI,EAAC,EAAE;QACP,UAAU,EAAC,YAAY;QACvB,SAAS,EAAC,MAAM;KACjB;IACD;QACE,IAAI,EAAC,IAAI,EAAE,SAAS,EAAE,8FAAqB;KAC5C;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACjCD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAQ3C,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,iBAAiB,CAAC;QAC1B,UAAK,GAAgB,EAAE,CAAC;KAqBzB;IAnBC,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG;YACX;gBACE,KAAK,EAAC,gBAAgB,EAAE,UAAU,EAAE,CAAC,YAAY,CAAC;aACnD;YACD;gBACE,KAAK,EAAC,QAAQ,EAAE,UAAU,EAAC,CAAC,SAAS,CAAC;aACvC;YACD;gBACE,KAAK,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,YAAY,CAAC;aACzC;YACD;gBACE,KAAK,EAAC,aAAa,EAAE,UAAU,EAAC,CAAC,aAAa,CAAC;aAChD;YACD;gBACE,KAAK,EAAC,mBAAmB,EAAE,UAAU,EAAC,CAAC,QAAQ,CAAC;aACjD;SACF,CAAC;IACJ,CAAC;;wEAtBU,YAAY;4FAAZ,YAAY;QCPzB,yEACE;QAAA,0EAAuC;QACzC,4DAAM;QAEN,yEAEE;QAAA,2EAA+B;QAG/B,oEACS;QACX,4DAAM;;QAVO,0DAAe;QAAf,4EAAe;;6FDMf,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACsB;AACT;AACY;AACH;AACZ;AACsB;AAC/B;AACkC;AAC1B;AACmB;AACT;AACC;;AAyB5D,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,wFAAmB,EAAE,gFAAkB,CAAC,YAd3C;YACP,uEAAa;YACb,4FAAuB;YACvB,2DAAW;YACX,mEAAmB;YACnB,oEAAgB;YAChB,8DAAa;YACb,sEAAgB;YAChB,iFAAe;YACf,wEAAY;YACZ,oFAAgB;YAChB,iFAAe;YACf,qEAAW;SACZ;mIAIU,SAAS,mBApBlB,2DAAY;QACZ,+FAAqB,aAGrB,uEAAa;QACb,4FAAuB;QACvB,2DAAW;QACX,mEAAmB;QACnB,oEAAgB;QAChB,8DAAa;QACb,sEAAgB;QAChB,iFAAe;QACf,wEAAY;QACZ,oFAAgB;QAChB,iFAAe;QACf,qEAAW;6FAKF,SAAS;cAtBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,+FAAqB;iBACtB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,4FAAuB;oBACvB,2DAAW;oBACX,mEAAmB;oBACnB,oEAAgB;oBAChB,8DAAa;oBACb,sEAAgB;oBAChB,iFAAe;oBACf,wEAAY;oBACZ,oFAAgB;oBAChB,iFAAe;oBACf,qEAAW;iBACZ;gBACD,SAAS,EAAE,CAAC,wFAAmB,EAAE,gFAAkB,CAAC;gBACpD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACxCD;AAAA;AAAA;AAA8D;AAGvD,MAAM,kBAAkB;IAC3B,KAAK,CAAI,CAAqB;QAE1B,MAAM,iBAAiB,GAAG,EAAE,CAAC;QAC7B,MAAM,KAAK,GAAM,IAAI,CAAC,EAAE,CAAC;QAEzB,KAAI,IAAI,GAAG,IAAI,KAAK,EAAC;YACjB,MAAM,CAAC,cAAc,CAAC,iBAAiB,EAAE,GAAG,EAC5C;gBACI,KAAK,EAAG,IAAI,0DAAW,EAAE;aAC5B,CAAC,CAAC;SACN;QAED,OAA6B,iBAAiB,CAAC;IACnD,CAAC;CACJ;;;;;;;;;;;;;AClBD;AAAA;AAAO,MAAM,eAAe;IACxB,YAAY,OAAY,IAAG,CAAC;CAC7B;;;;;;;;;;;;;ACFH;AAAA;AAAA,mBAAmB;AACnB,IAAY,WAkBX;AAlBD,WAAY,WAAW;IACnB,qBAAqB;IACrB,2CAAO;IAEP,yBAAyB;IACzB,+DAAiB;IAEjB,yBAAyB;IACzB,2EAAuB;IAEvB,wBAAwB;IACxB,+DAAiB;IAEjB,0CAA0C;IAC1C,iGAAkC;IAElC,qCAAqC;IACrC,yEAAsB;AAC1B,CAAC,EAlBW,WAAW,KAAX,WAAW,QAkBtB;;;;;;;;;;;;;ACjBD;AAAA;AAAA,0CAA0C;AACnC,MAAM,WAAW;IACpB;;;;OAIG;IACH,YAA4B,IAAkB,EAAkB,IAAY;QAAhD,SAAI,GAAJ,IAAI,CAAc;QAAkB,SAAI,GAAJ,IAAI,CAAQ;IAE5E,CAAC;CACJ;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACK;AAE5C,MAAM,yBAA0B,SAAQ,yDAA0C;IACrF,YAAY,IAAmC;QAC3C,KAAK,CAAC,8DAAW,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;CACJ;AAEM,MAAM,6BAA6B;IACtC,YAAmB,QAAiB;QAAjB,aAAQ,GAAR,QAAQ,CAAS;IACpC,CAAC;CACJ;AAED,IAAY,QAGX;AAHD,WAAY,QAAQ;IAChB,uCAAQ;IACR,uCAAQ;AACZ,CAAC,EAHW,QAAQ,KAAR,QAAQ,QAGnB;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAAA;AAA8C;AACK;AAE5C,MAAM,aAAc,SAAQ,yDAA8B;IAC7D,YAAY,IAAwB;QAChC,KAAK,CAAC,8DAAW,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC;CACJ;AAEM,MAAM,iBAAiB;CAE7B;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAA8C;AACK;AAG5C,MAAM,mBAAoB,SAAQ,yDAAoC;IACzE,YAAY,IAA6B;QACrC,KAAK,CAAC,8DAAW,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;CACJ;AAEM,MAAM,uBAAuB;IAChC,YAAmB,MAAgB;QAAhB,WAAM,GAAN,MAAM,CAAU;IAAE,CAAC;CACzC;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAA8C;AACK;AAE5C,MAAM,UAAW,SAAQ,yDAAiB;IAC7C;QACI,KAAK,CAAC,8DAAW,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;CACJ;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACK;AACE;AAE9C,MAAM,aAAc,SAAQ,yDAA8B;IAC7D,YAAY,IAAuB;QAC/B,KAAK,CAAC,8DAAW,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC;CACJ;AAEM,MAAM,iBAAiB;IAG1B,YAAY,IAAY,EAAE,QAAe;QAFzC,SAAI,GAAU,CAAC,CAAC;QAChB,SAAI,GAAU,kEAAS,CAAC,yBAAyB,CAAC;QAE9C,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,QAAQ,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;IACzB,CAAC;CACJ;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAAA;AAA8C;AACK;AAE5C,MAAM,8BAA+B,SAAQ,yDAA+C;IAC/F,YAAY,IAAwC;QAChD,KAAK,CAAC,8DAAW,CAAC,8BAA8B,EAAE,IAAI,CAAC,CAAC;IAC5D,CAAC;CACJ;AAEM,MAAM,kCAAkC;IAC3C,YAA4B,SAAiB;QAAjB,cAAS,GAAT,SAAS,CAAQ;IAC7C,CAAC;CACJ;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAsD;AACJ;AAEE;;AAEpD,2CAA2C;AAEpC,MAAM,mBAAmB;IADhC;QAEU,UAAK,GAAG,IAAI,oDAAe,CAAmB,IAAI,gEAAU,EAAE,CAAC,CAAC;QAExE,uBAAuB;QAChB,kBAAa,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;KAalD;IAXC,mBAAmB;IAEnB,QAAQ,KAAK,CAAC;IAEd;;;OAGG;IACH,WAAW,CAAC,GAAqB;QAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACvB,CAAC;;sFAhBU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB;6FAAnB,mBAAmB;cAD/B,wDAAU;;;;;;;;;;;;;;ACNX;AAAA;AAAA;AAAA;AAAoD;AAEmB;;AAMhE,MAAM,kBAAkB;IAE7B,SAAS,CAAC,KAAa,EAAE,GAAG,IAAe;QACzC,IAAG,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,kFAAc,CAAC,SAAS,CAAC,EAAE,EAAC;YACxD,OAAO,IAAI,CAAC;SACb;QACD,MAAM,cAAc,GAAG,KAAuB,CAAC;QAC/C,MAAM,YAAY,GAAG,cAAc,CAAC,SAAS,IAAI,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC;QACjF,MAAM,aAAa,GAAG,cAAc,CAAC,UAAU,IAAI,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC;QAEpF,OAAO,GAAG,cAAc,CAAC,QAAQ,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,GAAC,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAC,GAAG,EAAC,KAAI,GAAG,aAAa,CAAC,CAAC,CAAC,GAAG,GAAC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,GAAC,GAAG,EAAC,KAAI,EAAE,CAAC;IAC/K,CAAC;;oFAXU,kBAAkB;sHAAlB,kBAAkB;6FAAlB,kBAAkB;cAH9B,kDAAI;eAAC;gBACJ,IAAI,EAAE,gBAAgB;aACvB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAuC;AAEvC,kBAAkB;AACX,MAAM,cAAc;;AACvB,gBAAgB;AACA,uBAAQ,GAAG,IAAI,mDAAQ,CAAC,CAAC,EAAC,iBAAiB,CAAC,CAAC;AAC7D,eAAe;AACC,wBAAS,GAAG,IAAI,mDAAQ,CAAC,CAAC,EAAC,kBAAkB,CAAC,CAAC;;;;;;;;;;;;;ACPnE;AAAA;AAAA,qCAAqC;AAC9B,MAAM,QAAQ;IACjB,YAA4B,EAAU,EAAkB,IAAW;QAAvC,OAAE,GAAF,EAAE,CAAQ;QAAkB,SAAI,GAAJ,IAAI,CAAO;IACnE,CAAC;CACJ;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAuC;AAEvC,8BAA8B;AACvB,MAAM,mBAAmB;;AAC5B,aAAa;AACG,4BAAQ,GAAG,IAAI,mDAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;AACrD,kBAAkB;AACF,+BAAW,GAAG,IAAI,mDAAQ,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;AAC7D,4BAA4B;AACZ,wCAAoB,GAAG,IAAI,mDAAQ,CAAC,CAAC,EAAE,uBAAuB,CAAC,CAAC;AAChF,oBAAoB;AACJ,iCAAa,GAAG,IAAI,mDAAQ,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;AACjE,uBAAuB;AACP,kCAAc,GAAG,IAAI,mDAAQ,CAAC,CAAC,EAAE,kBAAkB,CAAC,CAAC;AACrE,eAAe;AACC,oCAAgB,GAAG,IAAI,mDAAQ,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;AAC/D,uBAAuB;AACP,iCAAa,GAAG,IAAI,mDAAQ,CAAC,CAAC,EAAE,kBAAkB,CAAC,CAAC;AACpE,gBAAgB;AACA,6BAAS,GAAG,IAAI,mDAAQ,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;;;;;;;;;;;;;ACnB7D;AAAA;AAAA,0BAA0B;AACnB,MAAM,aAAa;IAMtB,YAAY,EAAS,EAAE,IAAW;QAC9B,IAAI,CAAC,EAAE,GAAC,EAAE,CAAC;QACX,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;IACnB,CAAC;CACJ;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAkD;AAE3C,MAAM,SAAU,SAAQ,6DAAa;IAKxC,YAAY,EAAS,EAAE,IAAW,EAAE,MAAc,EAAE,QAAe,EAAE,sBAAgC;QAC7F,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAChB,IAAI,CAAC,sBAAsB,GAAC,sBAAsB,CAAC;QACnD,IAAI,CAAC,MAAM,GAAC,MAAM,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAC,QAAQ,CAAC;IAC3B,CAAC;CACR;;;;;;;;;;;;;ACbD;AAAA;AAAO,MAAM,SAAS;;AACF,mCAAyB,GAAG,CAAC,CAAC;;;;;;;;;;;;;ACDlD;AAAA;AAAA;AAAA;AAAkD;;;AAQ3C,MAAM,qBAAqB;IAEhC,YAAoB,MAAuB;QAAvB,WAAM,GAAN,MAAM,CAAiB;QADpC,iBAAY,GAAY,EAAE,CAAC;IACa,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxD,CAAC;;0FANU,qBAAqB;qGAArB,qBAAqB;QCRlC,oEACA;QAAA,qEAAI;QAAA,uDAAqC;QAAA,4DAAK;;QAA1C,0DAAqC;QAArC,oMAAqC;;6FDO5B,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;kGAAlB,kBAAkB;QCP/B,oEAAG;QAAA,4EAAiB;QAAA,4DAAI;;6FDOX,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACgB;;;AACvE,MAAM,MAAM,GAAW;IACpB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mFAAkB;KAC9B;CACH,CAAC;AAMK,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,kBAAkB,uFAFnB,4DAAY;6FAEX,kBAAkB;cAJ9B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACW;AACa;;AAUhE,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,kBALb;YACP,4DAAY;YACZ,wEAAkB;SACnB;mIAEU,WAAW,mBANP,mFAAkB,aAE/B,4DAAY;QACZ,wEAAkB;6FAGT,WAAW;cAPvB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,mFAAkB,CAAC;gBAClC,OAAO,EAAE;oBACP,4DAAY;oBACZ,wEAAkB;iBACnB;aACF;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,uBAAuB;IAElC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8FALU,uBAAuB;uGAAvB,uBAAuB;QCPpC,oEAAG;QAAA,iFAAsB;QAAA,4DAAI;;6FDOhB,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAC+B;;;AAEtF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kGAAuB;KACnC;CACF,CAAC;AAMK,MAAM,uBAAuB;;sGAAvB,uBAAuB;wKAAvB,uBAAuB,kBAHzB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,uBAAuB,uFAFxB,4DAAY;6FAEX,uBAAuB;cAJnC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACqB;AACkB;;AAU/E,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBALlB;YACP,4DAAY;YACZ,kFAAuB;SACxB;mIAEU,gBAAgB,mBANZ,kGAAuB,aAEpC,4DAAY;QACZ,kFAAuB;6FAGd,gBAAgB;cAP5B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,kGAAuB,CAAC;gBACvC,OAAO,EAAE;oBACP,4DAAY;oBACZ,kFAAuB;iBACxB;aACF;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAIA;;;;;;;;;AAS3C,MAAM,0BAA0B;IAOrC,YACU,cAA+B,EAC/B,KAAa,EACb,gBAAkC,EAClC,mBAAwC;QAHxC,mBAAc,GAAd,cAAc,CAAiB;QAC/B,UAAK,GAAL,KAAK,CAAQ;QACb,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,wBAAmB,GAAnB,mBAAmB,CAAqB;QATlD,eAAU,GAAW,KAAK,CAAC;QAE3B,eAAU,GAAW,KAAK,CAAC;QAC3B,8BAAyB,GAAW,KAAK,CAAC;IAO1C,CAAC;IAED,QAAQ;QACN,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAG,OAAO,EAAC;YACT,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,+BAA+B,OAAO,EAAE,CAAC,CAAC;YAE9D,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;gBAC/C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACf,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC1B,CAAC,CAAC,CAAC;SAEJ;aACG;YACF,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;YACvC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;IACH,CAAC;IAED,aAAa,CAAC,KAAY;QACxB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,mBAAmB,CAAC,KAAK;QACvB,IAAG,IAAI,CAAC,UAAU,EAAC;YACjB,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;gBAC/B,MAAM,EAAC,QAAQ;gBACf,OAAO,EAAC,wDAAwD;gBAChE,MAAM,EAAC,GAAE,EAAE,KAAI,CAAC,YAAY,EAAE;aAC/B,CAAC,CAAC;SACJ;aACG;YACF,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;IACH,CAAC;IAEO,YAAY;QAClB,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;;oGAnDU,0BAA0B;0GAA1B,0BAA0B,wHAF1B,CAAC,+DAAmB,CAAC;QCXlC,yEACI;QAAA,yEACI;QAAA,wFAA+F;QAA3D,4KAAgB,4BAAoB,IAAC;QAAC,4DAAqB;QACnG,4DAAM;QAEN,yEACI;QAAA,yEACI;QAAA,uEAAsE;QAC1E,4DAAM;QACN,yEACI;QAAA,4EAAsI;QAA/C,wJAAS,+BAA2B,IAAC;QAAC,4DAAS;QAC1I,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,gFAAqE;;QAZzC,0DAAe;QAAf,4EAAe;;6FDW9B,0BAA0B;cANtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,WAAW,EAAE,sCAAsC;gBACnD,SAAS,EAAE,CAAC,sCAAsC,CAAC;gBACnD,SAAS,EAAE,CAAC,+DAAmB,CAAC;aACjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZiD;AACL;AACgD;AAKjB;AAGH;;;;;;;;;;;;;;ICR4F,uEAAsB;IAAA,4DAAC;IAAA,4DAAO;;;IAAtG,uEAA8C;IAAA,uDAA0B;IAAA,oHAAsB;IAAQ,4DAAO;;;;IAA/D,0DAA0B;IAA1B,iGAA0B;IAAM,0DAAe;IAAf,gFAAe;;;IAG1K,0EACI;IAAA,uEAIA;IAAA,4EAA6B;IAAA,uDAAmB;IAAA,4DAAQ;IAC5D,4DAAM;;;;IAJE,0DAAoB;IAApB,gFAAoB;IAGjB,0DAAqB;IAArB,iFAAqB;IAAC,0DAAmB;IAAnB,mFAAmB;;;IAyChD,2EACI;IAAA,qEACA;IAAA,qEACA;IAAA,qEACA;IAAA,qEACJ;IAAA,4DAAW;;;IAIX,yEACI;IAAA,qEAAI;IAAA,6EAAG;IAAA,4DAAK;IACZ,qEAAI;IAAA,mIAAY;IAAA,4DAAK;IACrB,qEAAI;IAAA,qGAAO;IAAA,4DAAK;IAChB,qEAAI;IAAA,4JAAiB;IAAA,4DAAK;IAC9B,4DAAK;;;IAOO,qEAA0C;IAAA,uDAA2B;;IAAA,4DAAK;;;IAAhC,0DAA2B;IAA3B,4IAA2B;;;IACrE,qEAA2C;IAAA,uDAAkD;IAAA,4DAAK;;;IAAvD,0DAAkD;IAAlD,wIAAkD;;;IALzG,qEACI;IAAA,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,qEACI;IAAA,yEACI;IAAA,kIAA0C;IAC1C,kIAA2C;IAC/C,4DAAK;IACT,4DAAK;IACL,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IACzB,qEAAI;IAAA,wDAAgB;IAAA,4DAAK;IAC7B,4DAAK;;;;IATG,0DAAoB;IAApB,qFAAoB;IAGZ,0DAAqC;IAArC,2GAAqC;IACrC,0DAAsC;IAAtC,4GAAsC;IAG9C,0DAAgB;IAAhB,iFAAgB;IAChB,0DAAgB;IAAhB,iFAAgB;;;IAjChC,8EAMI;IAAA,uIACI;IAQJ,uIACI;IAOJ,wIACI;IAYR,4DAAU;;;IAnCN,qFAAyB;;;AD5BlC,MAAM,eAAgB,SAAQ,qEAA8C;IAejF,YAAoB,aAA4B;QAC9C,KAAK,EAAE,CAAC;QADU,kBAAa,GAAb,aAAa,CAAe;QAbzC,oBAAe,GAAa,KAAK,CAAC;QAClC,wBAAmB,GAAa,KAAK,CAAC;QAEtC,cAAS,GAAY,yFAAc,CAAC,SAAS,CAAC;QAC9C,aAAQ,GAAY,yFAAc,CAAC,QAAQ,CAAC;QAE5C,gBAAW,GAAc,CAAC,yFAAc,CAAC,SAAS,EAAE,yFAAc,CAAC,QAAQ,CAAC,CAAC;QAC7E,aAAQ,GAAe,IAAI,0DAAW,EAAE,CAAC;QAGzC,YAAO,GAAW,KAAK,CAAC;QACxB,iBAAY,GAAe,IAAI,0DAAW,CAAC,IAAI,CAAC,CAAC;IAIxD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;QACjD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IACxF,CAAC;IAES,oBAAoB,CAAC,GAAW,EAAE,aAAoC;QAC9E,OAAO;YACL,SAAS,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI;YACzD,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI;YACvD,IAAI,EAAC,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS;SACvE,CAAC;IACJ,CAAC;IAES,sBAAsB,CAAC,SAAuB;QACtD,QAAO,SAAS,CAAC,IAAI,CAAC,EAAE,EAAC;YACvB,KAAK,IAAI,CAAC,SAAS,CAAC,EAAE;gBACpB,OAAO,SAAS,CAAC,SAAS,CAAC;YAC7B,KAAK,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACnB,OAAO,SAAS,CAAC,QAAQ,CAAC;YAC5B;gBACE,MAAM,IAAI,wEAAe,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC7C;IACH,CAAC;IAES,eAAe;QACvB,OAAO;YACL,SAAS,EAAE,IAAI,0DAAW,EAAE;YAC5B,QAAQ,EAAE,IAAI,0DAAW,EAAE;YAC3B,IAAI,EAAC,IAAI,0DAAW,EAAE;SACvB,CAAC;IACJ,CAAC;IAED,wBAAwB;IACxB,cAAc,CAAC,MAAoB;QACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QAEtC,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;QACxD,QAAO,UAAU,EAAC;YAChB,KAAK,IAAI,CAAC,SAAS,CAAC,EAAE;gBACpB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC;gBACvF,MAAM;YACR,KAAK,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACnB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC;gBACtF,MAAM;YACR;gBACE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAChC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,4BAA4B,CAAC,KAAK;QACvC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;IAClC,CAAC;IAEY,iBAAiB,CAAC,KAAK;;YAClC,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YAErC,MAAM,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAC9C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;KAAA;IAEM,wBAAwB,CAAC,MAAM,EAAE,MAAc;QACpD,MAAM,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAEM,uBAAuB,CAAC,MAAM;QACnC,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAEY,sBAAsB,CAAC,KAAK;;YACvC,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YAErC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAC/D,MAAM,CAAC,EAAE,GAAG,QAAQ,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;KAAA;IACD,YAAY;IAEJ,cAAc;QACpB,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;QACxD,IAAI,MAAM,GAAG,UAAU,IAAI,yFAAc,CAAC,SAAS,CAAC,EAAE;YACpD,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK;YACxC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC;QAE1C,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,UAAU;QAChB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;IACnC,CAAC;;8EA5GU,eAAe;+FAAf,eAAe,2GAFf,8EAAyB,CAAC,eAAe,CAAC;;QCfvD,yEACI;QAAA,yEACI;QAAA,2EAA+E;QAAA,+FAAM;QAAA,6GAA8C;;QAA+D,4DAAQ;QAC1M,yEACI;QAAA,yEACI;QAAA,2GACI;QAMR,4DAAM;QACN,yEACI;QAAA,0EAAuI;QACvI,0EAAsJ;QACtJ,6EAAgK;QAAxD,8IAAS,wCAAoC,IAAC;QAAC,4DAAS;QACpK,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,uFAEuB;QACvB,sFAEsB;QAC1B,4DAAM;QACN,oFASI;QARQ,oMAAiC,wOAMvB,yCAAwC,IANjB,0FAOvB,mCAA+B,IAPR;QAQzC,2EACI;QAAA,2EACI;QAAA,6EAAiF;QAAA,gGAAM;QAAA,4DAAQ;QAC/F,2EACI;QAAA,wEACJ;QAAA,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,sHAMI;;QA+BR,4DAAM;QACV,4DAAM;QACV,4DAAW;;QAnFN,oFAAuB;QAEuE,0DAAuC;QAAvC,qJAAuC;QAGtF,0DAAsC;QAAtC,oFAAsC;QAST,0DAA6B;QAA7B,0FAA6B;QACd,0DAA6B;QAA7B,0FAA6B;QAKjG,0DAAoF;QAApF,iJAAoF;QACpF,2GAA8C;QAE9C,0DAAmF;QAAnF,gJAAmF;QACnF,0GAA6C;QAO7D,0DAA0B;QAA1B,gIAA0B;QAH1B,4FAAiC;QAYmB,0DAAgC;QAAhC,6FAAgC;QAI3E,0DAAkD;QAAlD,wJAAkD;;6FD3B1D,eAAe;cAN3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;gBACtC,SAAS,EAAE,8EAAyB,CAAC,eAAe,CAAC;aACtD;;;;;;;;;;;;;;AEhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACL;AAC2C;;;;AASjF,MAAM,wBAAyB,SAAQ,gEAAoC;IAEtE,eAAe;QACvB,OAAO;YACL,EAAE,EAAC,IAAI,0DAAW,EAAE;YACpB,IAAI,EAAC,IAAI,0DAAW,EAAE;YACtB,GAAG,EAAC,IAAI,0DAAW,EAAE;YACrB,GAAG,EAAC,IAAI,0DAAW,EAAE;YACrB,KAAK,EAAC,IAAI,0DAAW,EAAE;YACvB,KAAK,EAAC,IAAI,0DAAW,EAAE;YACvB,IAAI,EAAC,IAAI,0DAAW,EAAE;SACvB,CAAC;IACJ,CAAC;;iIAZU,wBAAwB;wGAAxB,wBAAwB,qHAFxB,8EAAyB,CAAC,wBAAwB,CAAC;QCThE,yEACI;QAAA,yEACK;QAAA,2EAA8D;QAAA,mIAAY;QAAA,4DAAQ;QACnF,yEACI;QAAA,sEACJ;QAAA,4DAAM;QACV,4DAAM;QACN,yEACQ;QAAA,2EAA8D;QAAA,6EAAG;QAAA,4DAAQ;QAC7E,yEACI;QAAA,uEACJ;QAAA,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,4EAA8D;QAAA,8EAAG;QAAA,4DAAQ;QACzE,0EACI;QAAA,uEACJ;QAAA,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,4EAA8D;QAAA,kEAAM;QAAA,4DAAQ;QAC5E,0EACI;QAAA,uEACJ;QAAA,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,4EAA8D;QAAA,+EAAI;QAAA,4DAAQ;QAC1E,0EACI;QAAA,uEACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA/BsB,oFAAuB;QAIT,0DAAyC;QAAzC,sGAAyC;QAMzC,0DAAwC;QAAxC,qGAAwC;QAMxC,0DAAwC;QAAxC,qGAAwC;QAMxC,0DAA0C;QAA1C,uGAA0C;QAM1C,0DAA0C;QAA1C,uGAA0C;;gIDjBvE,wBAAwB;6FAAxB,wBAAwB;cANpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,mCAAmC,CAAC;gBAChD,SAAS,EAAE,8EAAyB,CAAC,wBAAwB,CAAC;aAC/D;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACQ;AAC8B;;;;AASjF,MAAM,uBAAwB,SAAQ,gEAAmC;IAC9E;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IACjC,CAAC;IAES,eAAe;QACvB,OAAO;YACH,EAAE,EAAC,IAAI,0DAAW,EAAE;YACpB,KAAK,EAAC,IAAI,0DAAW,EAAE;YACvB,SAAS,EAAC,IAAI,0DAAW,EAAE;YAC3B,QAAQ,EAAC,IAAI,0DAAW,EAAE;YAC1B,UAAU,EAAC,IAAI,0DAAW,EAAE;YAC5B,KAAK,EAAC,IAAI,0DAAW,EAAE;YACvB,IAAI,EAAC,IAAI,0DAAW,EAAE;SACzB,CAAC;IACJ,CAAC;;8FAhBU,uBAAuB;uGAAvB,uBAAuB,oHAFvB,8EAAyB,CAAC,uBAAuB,CAAC;QCV/D,yEACI;QAAA,yEACK;QAAA,2EAA8D;QAAA,6EAAG;QAAA,4DAAQ;QAC1E,yEACI;QAAA,sEACJ;QAAA,4DAAM;QACV,4DAAM;QACN,yEACQ;QAAA,2EAA8D;QAAA,qGAAO;QAAA,4DAAQ;QACjF,yEACI;QAAA,uEACJ;QAAA,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,4EAA8D;QAAA,4GAAQ;QAAA,4DAAQ;QAC9E,0EACI;QAAA,uEACJ;QAAA,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,4EAA8D;QAAA,kEAAM;QAAA,4DAAQ;QAC5E,0EACI;QAAA,uEACJ;QAAA,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,4EAA8D;QAAA,+EAAI;QAAA,4DAAQ;QAC1E,0EACI;QAAA,uEACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA/BsB,oFAAuB;QAIT,0DAA8C;QAA9C,2GAA8C;QAM9C,0DAA6C;QAA7C,0GAA6C;QAM7C,0DAA+C;QAA/C,4GAA+C;QAM/C,0DAA0C;QAA1C,uGAA0C;QAM1C,0DAA0C;QAA1C,uGAA0C;;6FDhBvE,uBAAuB;cANnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;gBAC/C,SAAS,EAAE,8EAAyB,CAAC,uBAAuB,CAAC;aAC9D;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACG;AAC2C;;;;;;;;;;;IC2CpE,yEACI;IAAA,qEAAI;IAAA,mIAAY;IAAA,4DAAK;IACzB,4DAAK;;;IAGL,yEACI;IAAA,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IAC7B,4DAAK;;;IAFD,sFAA0B;IACtB,0DAAgB;IAAhB,gFAAgB;;;ADrCrC,MAAM,kBAAmB,SAAQ,gEAA8B;IAMpE,YAAoB,gBAAmC;QACrD,KAAK,EAAE,CAAC;QADU,qBAAgB,GAAhB,gBAAgB,CAAmB;QALvD,cAAS,GAAc,EAAE,CAAC;QAC1B,iBAAY,GAAY,IAAI,CAAC;QAC7B,sBAAiB,GAAa,IAAI,CAAC;QACnC,eAAU,GAAgB,EAAE,CAAC;QAM7B,2BAAsB,GAAW,KAAK,CAAC;IAFvC,CAAC;IAIS,eAAe;QACvB,OAAO;YACL,EAAE,EAAC,IAAI,0DAAW,EAAE;YACpB,IAAI,EAAC,IAAI,0DAAW,EAAE;YACtB,sBAAsB,EAAE,IAAI,0DAAW,EAAE;YACzC,MAAM,EAAC,IAAI,0DAAW,EAAE;YACxB,QAAQ,EAAC,IAAI,0DAAW,EAAE;SAC3B,CAAC;IACJ,CAAC;IAED,+BAA+B,CAAC,KAAK;QACnC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;IACrC,CAAC;IAED,wBAAwB,CAAC,KAAK,EAAE,MAAc;QAC5C,MAAM,CAAC,QAAQ,EAAE,CAAC;QAClB,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,IAAI,EAAC,IAAI,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,GAAE;YACnE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,KAAK;QACrB,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,CAAC;QACtG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;QAC9D,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QACtE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAClE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAE1E,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;IACtC,CAAC;IAED,uBAAuB,CAAC,KAAK;QAC3B,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,mBAAmB,CAAC,KAAK;QACvB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,mBAAmB,CAAC,KAAK;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAClE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAC,KAAK,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAE;YAClF,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,UAAU;QAChB,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;IACtC,CAAC;IAEO,SAAS,CAAC,SAAoB,EAAE,UAAmB,EAAE,UAAuB,EAAE,QAAe;QACnG,MAAM,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,EAAC,EAAE;YAC5D,OAAO,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC,QAAQ,KAAK,QAAQ,CAAC;QAC7D,CAAC,CAAC,CAAC;QAEH,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAE,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YACrC,MAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,WAAW,GAAa;gBAC5B,GAAG,EAAE,GAAG,KAAK,CAAC,EAAE,EAAE;gBAClB,KAAK,EAAE,KAAK,CAAC,IAAI;gBACjB,IAAI,EAAE,KAAK;gBACX,YAAY,EAAE,mBAAmB;gBACjC,aAAa,EAAE,cAAc;gBAC7B,QAAQ,EAAC,EAAE;aACZ,CAAC;YAEF,IAAG,UAAU,KAAK,IAAI,EAAC;gBACrB,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aAC7B;iBACG;gBACA,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACzC;YAED,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;SAC9D;IACH,CAAC;IAEO,mBAAmB,CAAC,eAAyB,EAAE,MAAgB;QACrE,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACrC,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACpF,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YACtC,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;SACvD;QAED,OAAO,eAAe,CAAC;IACzB,CAAC;;oFAnGU,kBAAkB;kGAAlB,kBAAkB,8GAFlB,8EAAyB,CAAC,kBAAkB,CAAC;;QCZ1D,yEACI;QAAA,2EAA8E;QAAA,mIAAY;QAAA,4DAAQ;QAClG,yEACI;QAAA,yEACI;QAAA,sEACJ;QAAA,4DAAM;QACN,yEACI;QAAA,4EAAyI;QAA3D,gJAAS,2CAAuC,IAAC;QAAC,4DAAS;QAC7I,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,iFAUI;QARA,yMAAoC,wOAM1B,yCAAwC,IANd,4FAO1B,mCAA+B,IAPL;QAQpC,0EACI;QACA,2EACI;QAAA,8EAMS;QAHL,kMAA4B,uGACZ,+BAA2B,IADf;QAGhC,4DAAS;QACb,4DAAM;QAEN,0EACI;QAAA,+EASI;QAHA,wMAAiC;QAGjC,iIACI;QAIJ,iIACI;QAIR,4DAAU;QACd,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,8EAAoJ;QAA7C,iJAAS,6BAAyB,IAAC;QAAC,4DAAS;QACxJ,4DAAM;QACN,2EACI;QAAA,8EAAkJ;QAA/C,iJAAS,+BAA2B,IAAC;QAAC,4DAAS;QACtJ,4DAAM;QACV,4DAAM;QAEV,4DAAW;;QAlEN,oFAAuB;QAI6B,0DAAyC;QAAzC,sGAAyC;QAa9F,0DAA0B;QAA1B,gIAA0B;QAH1B,+FAAoC;QAYxB,0DAAmB;QAAnB,gFAAmB;QAWnB,0DAAoB;QAApB,iFAAoB;QAsB+C,0DAA+B;QAA/B,4FAA+B;;6FD7CrG,kBAAkB;cAN9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;gBACzC,SAAS,EAAE,8EAAyB,CAAC,kBAAkB,CAAC;aACzD;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAA0C;AACG;AAC2C;;;AASjF,MAAM,wBAAyB,SAAQ,gEAA6B;IAEzE;QACE,KAAK,EAAE,CAAC;IACT,CAAC;IAEQ,eAAe;QACvB,OAAO;YACL,EAAE,EAAC,IAAI,0DAAW,EAAE;YACpB,IAAI,EAAC,IAAI,0DAAW,EAAE;SACvB,CAAC;IACJ,CAAC;;gGAXU,wBAAwB;wGAAxB,wBAAwB,sHAFxB,8EAAyB,CAAC,wBAAwB,CAAC;QCThE,yEACI;QAAA,yEACI;QAAA,2EAA8D;QAAA,+FAAM;QAAA,4DAAQ;QAChF,4DAAM;QACN,yEACI;QAAA,2EAAgD;QAAA,uDAAgC;QAAA,4DAAQ;QAC5F,4DAAM;QACV,4DAAM;;QAPsB,oFAAuB;QAKK,0DAAgC;QAAhC,iGAAgC;;6FDM3E,wBAAwB;cANpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,oCAAoC,CAAC;gBACjD,SAAS,EAAE,8EAAyB,CAAC,wBAAwB,CAAC;aAC/D;;;;;;;;;;;;;;;;;;;;;;;;;;AEV8E;AACvB;AAC2E;;;;;;;;AAS5H,MAAM,sBAAuB,SAAQ,0EAAoC;IANhF;;QAaE,eAAU,GAAwB,IAAI,0DAAY,EAAS,CAAC;KAgB7D;IAdW,eAAe;QACvB,OAAO;YACL,EAAE,EAAE,IAAI,0DAAW,EAAE;YACrB,YAAY,EAAE,IAAI,0DAAW,EAAE;YAC/B,MAAM,EAAC,IAAI,0DAAW,EAAE;YACxB,MAAM,EAAC,IAAI,0DAAW,EAAE;YACxB,SAAS,EAAC,IAAI,0DAAW,EAAE;YAC3B,iBAAiB,EAAC,IAAI,0DAAW,EAAE;YACnC,wBAAwB,EAAC,IAAI,0DAAW,EAAE;YAC1C,gBAAgB,EAAC,IAAI,0DAAW,EAAE;YAClC,aAAa,EAAC,IAAI,0DAAW,EAAE;YAC/B,UAAU,EAAC,IAAI,0DAAW,EAAE;SAC7B,CAAC;IACJ,CAAC;;2HAtBU,sBAAsB;sGAAtB,sBAAsB,2MAFtB,8EAAyB,CAAC,sBAAsB,CAAC;QCT9D,0EACI;QACA,yEACI;QAAA,yEACI;QAAA,2EAA8D;QAAA,mFAAI;QAAA,4DAAQ;QAC9E,4DAAM;QACN,yEACI;QAAA,2EAAgD;QAAA,uDAA4D;;QAAA,4DAAQ;QACxH,4DAAM;QACN,yEACI;QAAA,4EAA8D;QAAA,0FAAK;QAAA,4DAAQ;QAC/E,4DAAM;QACN,0EACI;QAAA,4EAAgD;QAAA,wDAA8B;QAAA,4DAAQ;QAC1F,4DAAM;QACN,uFAA2F;QAC/F,4DAAM;QAGN,0EACI;QAAA,0EACI;QAAA,4EAA6B;QAAA,qLAAqB;QAAA,4DAAQ;QAC9D,4DAAM;QACN,0EACI;QAAA,4EAAgB;QAAA,wDAA4C;QAAA,4DAAQ;QACxE,4DAAM;QACV,4DAAM;QAGN,0EACI;QAAA,0EACI;QAAA,4EAA6B;QAAA,kHAAS;QAAA,4DAAQ;QAClD,4DAAM;QACN,0EACI;QAAA,4EAAgB;QAAA,wDAAsC;QAAA,4DAAQ;QAClE,4DAAM;QACV,4DAAM;QAEN,+EAA+E;QAC/E,4EAAqE;QAGrE,0EACI;QAAA,6EAAsF;QAAA,gGAAM;QAAA,4DAAQ;QACpG,0EACI;QAAA,2EAAkK;QACtK,4DAAM;QACV,4DAAM;QAGN,0EACI;QAAA,6EAAkF;QAAA,oIAAY;QAAA,4DAAQ;QACtG,0EACI;QAAA,2EAA0J;QAC9J,4DAAM;QACV,4DAAM;QAGN,0EACI;QAAA,6EAA6F;QAAA,yHAAW;QAAA,4DAAQ;QAChH,0EACI;QAAA,wEACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAO;;QAhED,oFAAuB;QAO+B,0DAA4D;QAA5D,yLAA4D;QAM5D,0DAA8B;QAA9B,+FAA8B;QAE3D,0DAA2C;QAA3C,wGAA2C;QAS9C,0DAA4C;QAA5C,6GAA4C;QAU5C,0DAAsC;QAAtC,uGAAsC;QAI/C,0DAA8C;QAA9C,2GAA8C;QACjD,0DAA2C;QAA3C,wGAA2C;QAMd,0DAAsD;QAAtD,mHAAsD;QAQ1D,0DAAkD;QAAlD,+GAAkD;QAQV,0DAA6D;QAA7D,0HAA6D;;AD9C5I;IAFC,8DAAS,EAAE;yDAEe;8HAJhB,sBAAsB;6FAAtB,sBAAsB;cANlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;gBAC9C,SAAS,EAAE,8EAAyB,CAAC,sBAAsB,CAAC;aAC7D;gBAKC,SAAS;kBADR,mDAAK;mBAAC,OAAO;YAId,UAAU;kBADT,oDAAM;mBAAC,cAAc;;;;;;;;;;;;;;AEjBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACuE;AAGlC;;;;;;ICDnF,2EAGa;;;;;IAFT,sHAAwC;;ADOzC,MAAM,6BAA6B;IAQxC,YAAoB,YAAkC;QAAlC,iBAAY,GAAZ,YAAY,CAAsB;QAPtD,kBAAa,GAAa,IAAI,CAAC;QAC/B,aAAQ,GAAc;YACpB,IAAI;YACJ,oGAAmB,CAAC,oBAAoB;YACxC,oGAAmB,CAAC,aAAa;SAClC,CAAC;IAEwD,CAAC;IAE3D,QAAQ;IACR,CAAC;IAED,WAAW,CAAC,KAAS;QACnB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,6GAAmB,CAAC,IAAI,iHAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAClH,CAAC;;0GAfU,6BAA6B;6GAA7B,6BAA6B;QCX1C,+EAGI;QADA,oKAAY,uBAAmB,IAAC;QAChC,uIAGA;QACJ,4DAAY;;QAJI,0DAA8C;QAA9C,iFAA8C;;6FDQjD,6BAA6B;cALzC,uDAAS;eAAC;gBACT,QAAQ,EAAE,4BAA4B;gBACtC,WAAW,EAAE,yCAAyC;gBACtD,SAAS,EAAE,CAAC,yCAAyC,CAAC;aACvD;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,8BAA8B;IAEzC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4GALU,8BAA8B;8GAA9B,8BAA8B;QCP3C,oEAAG;QAAA,yFAA8B;QAAA,4DAAI;;6FDOxB,8BAA8B;cAL1C,uDAAS;eAAC;gBACT,QAAQ,EAAE,6BAA6B;gBACvC,WAAW,EAAE,0CAA0C;gBACvD,SAAS,EAAE,CAAC,0CAA0C,CAAC;aACxD;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAImD;;;;;;;AAM9F,MAAM,gCAAgC;IAI3C,YAAoB,YAAkC;QAAlC,iBAAY,GAAZ,YAAY,CAAsB;QAHtD,iBAAY,GAAU,IAAI,CAAC;QAC3B,uBAAkB,GAAW,KAAK,CAAC;IAEuB,CAAC;IAE3D,QAAQ;IACR,CAAC;IAED,mBAAmB,CAAC,KAAS;QAC3B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,oFAAa,CAAC,EAAE,IAAI,EAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;IAC/E,CAAC;IAED,sBAAsB,CAAC,KAAS;QAC9B,IAAG,KAAK,CAAC,OAAO,KAAK,EAAE,EAAC;YACtB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,oFAAa,CAAC,EAAE,IAAI,EAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;SAC9E;IACH,CAAC;;gHAjBU,gCAAgC;gHAAhC,gCAAgC;QCV7C,yEACI;QAAA,yEACI;QAAA,oFAA4H;QAA5G,yNAAgC;QAA2D,4DAAiB;QAChI,4DAAM;QAEN,yEACI;QAAA,2EACJ;QADkC,0MAA0B,yGAAmD,kCAA8B,IAAjF;QAAxD,4DACJ;QAAA,4DAAM;QAEN,yEACI;QAAA,8EAA8G;QAAnD,oKAAW,+BAA2B,IAAC;QAAC,4DAAW;QAClH,4DAAM;QACV,4DAAM;;QAVkB,0DAAgC;QAAhC,2FAAgC;QAIlB,0DAA0B;QAA1B,qFAA0B;;6FDInD,gCAAgC;cAL5C,uDAAS;eAAC;gBACT,QAAQ,EAAE,+BAA+B;gBACzC,WAAW,EAAE,4CAA4C;gBACzD,SAAS,EAAE,CAAC,4CAA4C,CAAC;aAC1D;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEoB;AAG6C;;;;;;;;;;;ICO/G,yEACI;IAAA,0FAA6D;IACjE,4DAAM;;ADFH,MAAM,sBAAsB;IAIjC,YAAoB,YAAkC,EAAU,KAAa;QAAzD,iBAAY,GAAZ,YAAY,CAAsB;QAAU,UAAK,GAAL,KAAK,CAAQ;QAH7E,aAAQ,GAAW,IAAI,CAAC;QACxB,aAAQ,GAAW,KAAK,CAAC;QAGvB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IACxC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,GAAE,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,aAAa,CAAC,GAAsB;QAClC,IAAG,GAAG,CAAC,IAAI,KAAK,mFAAW,CAAC,kBAAkB,EAAC;YAC7C,MAAM,6BAA6B,GAA+B,GAAI,CAAC,IAAI,CAAC;YAE5E,IAAI,CAAC,QAAQ,GAAG,6BAA6B,CAAC,QAAQ,KAAK,6FAAQ,CAAC,IAAI,CAAC;YACzE,IAAI,CAAC,QAAQ,GAAG,6BAA6B,CAAC,QAAQ,KAAK,6FAAQ,CAAC,IAAI,CAAC;SAC1E;IACH,CAAC;;4FAnBU,sBAAsB;sGAAtB,sBAAsB;QCZnC,wEACI;QACA,yEACI;QAAA,2FAA+D;QACnE,4DAAM;QAEN,yEACI;QAAA,wFAAyD;QACzD,8FAAqE;QACrE,gGAAyE;QAC7E,4DAAM;QAEN,kHACI;QAER,qEAAe;;QAHM,0DAAgB;QAAhB,8EAAgB;;6FDAxB,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,0CAA0C;gBACvD,SAAS,EAAE,CAAC,0CAA0C,CAAC;aACxD;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACoB;AAE2B;AAGxC;;;;AAOlD,MAAM,mCAAmC;IAI9C,YAAmB,YAAiC;QAAjC,iBAAY,GAAZ,YAAY,CAAqB;QAHpD,iBAAY,GAAU,CAAC,CAAC;QACxB,aAAQ,GAAU,2DAAS,CAAC,yBAAyB,CAAC;IAEE,CAAC;IAEzD,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,GAAE,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,aAAa,CAAC,GAAsB;QAClC,IAAG,GAAG,CAAC,IAAI,IAAI,mFAAW,CAAC,8BAA8B,EAAC;YACxD,MAAM,2BAA2B,GAAoC,GAAI,CAAC,IAAI,CAAC;YAC/E,IAAI,CAAC,YAAY,GAAG,2BAA2B,CAAC,SAAS,CAAC;SAC3D;IACH,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,2FAAa,CAAC,IAAI,+FAAiB,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAE,CAAC,CAAC,CAAC;IACnG,CAAC;;sHAnBU,mCAAmC;mHAAnC,mCAAmC;QCbhD,oFAIc;QADoB,oLAAe,wBAAoB;QACrE,4DAAc;;QAFV,8EAAiB;;6FDWR,mCAAmC;cAL/C,uDAAS;eAAC;gBACT,QAAQ,EAAE,kCAAkC;gBAC5C,WAAW,EAAE,+CAA+C;gBAC5D,SAAS,EAAE,CAAC,+CAA+C,CAAC;aAC7D;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAI8B;AACsC;AAEhD;AAEjB;;;;;;;;;;ICF7C,2EACI;IAAA,oEACA;IAAA,oEACA;IAAA,oEACA;IAAA,oEACA;IAAA,oEACA;IAAA,oEACA;IAAA,oEACJ;IAAA,4DAAW;;;IAIX,wEACI;IAAA,qEAAI;IAAA,yFAAK;IAAA,4DAAK;IACd,qEAAI;IAAA,8HAAY;IAAA,4DAAK;IACrB,qEAAI;IAAA,+FAAM;IAAA,4DAAK;IACf,qEAAI;IAAA,wKAAmB;IAAA,4DAAK;IAC5B,qEAAI;IAAA,gGAAM;IAAA,4DAAK;IACf,sEAAI;IAAA,kHAAS;IAAA,4DAAK;IAClB,iEAAS;IACb,4DAAK;;;IAQM,qEAA+C;IAAA,uDAA6E;IAAA,4DAAK;;;IAAlF,0DAA6E;IAA7E,gKAA6E;;;IAC5H,qEAAgD;IAAA,uDAAoB;IAAA,4DAAK;;;IAAzB,0DAAoB;IAApB,oFAAoB;;;IACpE,qEAA8B;IAAA,uDAAqB;IAAA,4DAAK;;;IAA1B,0DAAqB;IAArB,qFAAqB;;;IACnD,qEAA8B;IAAA,uDAAqB;IAAA,4DAAK;;;IAA1B,0DAAqB;IAArB,qFAAqB;;;;IAR9D,qEACI;IAAA,qEAAI;IAAA,uDAAW;IAAA,4DAAK;IACpB,qEAAI;IAAA,uDAAyC;;IAAA,4DAAK;IAClD,qEACI;IAAA,wEACG;IAAA,wIAA+C;IAC/C,wIAAgD;IAChD,0IAA8B;IAC9B,0IAA8B;IACjC,4DAAK;IACT,4DAAK;IACL,sEACI;IAAA,yEACI;IAAA,sEAAI;IAAA,wDAAuB;IAAA,4DAAK;IAChC,sEAAI;IAAA,wDAA0B;IAAA,4DAAK;IACvC,4DAAK;IACT,4DAAK;IACL,sEAAI;IAAA,wDAAoB;IAAA,4DAAK;IAC7B,sEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAC5B,sEACI;IAAA,yEAA0J;IAC9J,4DAAK;IACT,4DAAK;;;;IArBG,0DAAW;IAAX,2EAAW;IACX,0DAAyC;IAAzC,qKAAyC;IAGlC,0DAA0C;IAA1C,8GAA0C;IAC1C,0DAA2C;IAA3C,+GAA2C;IAC3C,0DAAyB;IAAzB,sFAAyB;IACzB,0DAAyB;IAAzB,sFAAyB;IAKxB,0DAAuB;IAAvB,uFAAuB;IACvB,0DAA0B;IAA1B,0FAA0B;IAGlC,0DAAoB;IAApB,oFAAoB;IACpB,0DAAmB;IAAnB,mFAAmB;IAEkF,0DAA2C;IAA3C,0JAA2C;;AD/BzJ,MAAM,+BAA+B;IAS1C,YAAoB,gBAAmC,EAAS,YAAiC;QAA7E,qBAAgB,GAAhB,gBAAgB,CAAmB;QAAS,iBAAY,GAAZ,YAAY,CAAqB;QAPjG,aAAQ,GAAc,kFAAc,CAAC,QAAQ,CAAC;QAC9C,cAAS,GAAc,kFAAc,CAAC,SAAS,CAAC;QAExC,WAAM,GAAuB,EAAE,IAAI,EAAG,CAAC,EAAE,IAAI,EAAG,kEAAS,CAAC,yBAAyB,EAAE,CAAC;QACtF,WAAM,GAAuB,EAAE,IAAI,EAAG,IAAI,EAAE,CAAC;IAGgD,CAAC;IAEtG,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;QAC1E,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,kEAAS,CAAC,yBAAyB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACxE,CAAC;IAED,YAAY,CAAC,IAAW,EAAE,IAAW,EAAE,IAAW,EAAE,MAAa;QAC/D,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;YAChC,IAAI,EAAC,IAAI;YACT,IAAI,EAAC,IAAI;YACT,IAAI,EAAC,IAAI;YACT,MAAM,EAAC,MAAM;SACd,CAAC,CAAC,IAAI,CAAC,CAAC,GAAE;YACT,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,wHAA8B,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC5F,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,GAAqB;QACjC,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,QAAO,GAAG,CAAC,IAAI,EAAC;YACd,KAAK,mFAAW,CAAC,aAAa,CAAC;gBAC7B,IAAI,CAAC,MAAM,GAAmB,GAAI,CAAC,IAAI,CAAC;gBACxC,MAAM;aACP;YACD,KAAK,mFAAW,CAAC,aAAa,CAAC;gBAC7B,IAAI,CAAC,MAAM,GAAmB,GAAI,CAAC,IAAI,CAAC;gBACxC,MAAM;aACP;YACD,KAAK,mFAAW,CAAC,mBAAmB,CAAC;gBACnC,IAAI,CAAC,YAAY,GAAyB,GAAI,CAAC,IAAI,CAAC;gBACpD,MAAM;aACP;YACD,OAAO,CAAC;gBACN,QAAQ,GAAG,KAAK,CAAC;aAClB;SACF;QAED,IAAG,QAAQ,EAAC;YACV,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;SAClI;IACH,CAAC;IAED,iBAAiB,CAAC,KAAS,EAAE,EAAS;QACpC,KAAK,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;IAC/B,CAAC;;8GAvDU,+BAA+B;+GAA/B,+BAA+B;QCnB5C,6EAMI;QAAA,2IACI;QAWJ,4IACI;QAUJ,6IACI;QAwBR,4DAAU;;QArDN,4EAAe;;6FDkBN,+BAA+B;cAL3C,uDAAS;eAAC;gBACT,QAAQ,EAAE,8BAA8B;gBACxC,WAAW,EAAE,2CAA2C;gBACxD,SAAS,EAAE,CAAC,2CAA2C,CAAC;aACzD;;;;;;;;;;;;;;AElBD;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC+F;;;;AAQ1I,MAAM,oCAAoC;IAG/C,YAAoB,YAAkC;QAAlC,iBAAY,GAAZ,YAAY,CAAsB;QAF/C,aAAQ,GAAW,IAAI,CAAC;IAE2B,CAAC;IAE3D,QAAQ;IACR,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAG,IAAI,CAAC,QAAQ,EAAK;YACnB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,qHAAyB,CAAC,IAAI,yHAA6B,CAAC,oGAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAChH;aACK;YACJ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,qHAAyB,CAAC,IAAI,yHAA6B,CAAC,oGAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAChH;IACH,CAAC;;wHAhBU,oCAAoC;oHAApC,oCAAoC;QCTjD,yEACI;QAAA,yEAKA;QADI,yJAAQ,YAAQ;QAJpB,4DAKA;QAAA,yEAKJ;QADQ,yJAAQ,YAAQ;QAJpB,4DAKJ;QAAA,4DAAM;;QARE,0DAA2B;QAA3B,6IAA2B;QAK3B,0DAA4B;QAA5B,8IAA4B;;6FDCvB,oCAAoC;cALhD,uDAAS;eAAC;gBACT,QAAQ,EAAE,oCAAoC;gBAC9C,WAAW,EAAE,iDAAiD;gBAC9D,SAAS,EAAE,CAAC,iDAAiD,CAAC;aAC/D;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAC0C;AACI;;;AAErG,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,iHAAsB;KAClC;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,6GAA0B;KACtC;IACD;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,6GAA0B;KACtC;IACD;QACE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAC,UAAU,EAAE,SAAS,EAAE,MAAM;KACnD;CACF,CAAC;AAMK,MAAM,sBAAsB;;qGAAtB,sBAAsB;sKAAtB,sBAAsB,kBAHxB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,sBAAsB,uFAFvB,4DAAY;6FAEX,sBAAsB;cAJlC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC1BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACsD;AACjC;AACuE;AACT;AACuB;AACjB;AACH;AACrF;AACI;AACR;AACQ;AACM;AACZ;AACuC;AAC+D;AACnD;AACM;AACR;AACS;AACnD;AACO;AACyB;AACjC;AACR;AACJ;AAC2F;AACH;AACF;AACvD;;AAwChE,MAAM,eAAe;;8FAAf,eAAe;wJAAf,eAAe,mBALhB;QACR,8FAAgB;QAChB,8FAAgB;KACjB,YAlBQ;YACP,mEAAmB;YACnB,4DAAY;YACZ,gFAAsB;YACtB,6DAAa;YACb,kEAAe;YACf,0DAAW;YACX,kEAAe;YACf,wEAAkB;YAClB,4DAAY;YACZ,0EAAmB;YACnB,kEAAe;YACf,wDAAU;YACV,4DAAY;SACb;mIAMU,eAAe,mBApCxB,iHAAsB;QACtB,uJAAgC;QAChC,8IAA6B;QAC7B,qKAAoC;QACpC,oJAA+B;QAC/B,iJAA8B;QAC9B,iKAAmC;QACnC,8GAA0B;QAC1B,qHAAkB;QAClB,4GAAe;QACf,oHAAsB;QACtB,gJAAwB;QACxB,6IAAuB;QACvB,2IAAwB;QACxB,qFAAkB,aAGlB,mEAAmB;QACnB,4DAAY;QACZ,gFAAsB;QACtB,6DAAa;QACb,kEAAe;QACf,0DAAW;QACX,kEAAe;QACf,wEAAkB;QAClB,4DAAY;QACZ,0EAAmB;QACnB,kEAAe;QACf,wDAAU;QACV,4DAAY;6FAOH,eAAe;cAtC3B,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,iHAAsB;oBACtB,uJAAgC;oBAChC,8IAA6B;oBAC7B,qKAAoC;oBACpC,oJAA+B;oBAC/B,iJAA8B;oBAC9B,iKAAmC;oBACnC,8GAA0B;oBAC1B,qHAAkB;oBAClB,4GAAe;oBACf,oHAAsB;oBACtB,gJAAwB;oBACxB,6IAAuB;oBACvB,2IAAwB;oBACxB,qFAAkB;iBACnB;gBACD,OAAO,EAAE;oBACP,mEAAmB;oBACnB,4DAAY;oBACZ,gFAAsB;oBACtB,6DAAa;oBACb,kEAAe;oBACf,0DAAW;oBACX,kEAAe;oBACf,wEAAkB;oBAClB,4DAAY;oBACZ,0EAAmB;oBACnB,kEAAe;oBACf,wDAAU;oBACV,4DAAY;iBACb;gBACD,SAAS,EAAC;oBACR,8FAAgB;oBAChB,8FAAgB;iBACjB;aACF;;;;;;;;;;;;;;ACrED;AAAA;AAAA;AAAkD;;AAO3C,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;QCPhC,oEAAG;QAAA,6EAAkB;QAAA,4DAAI;;6FDOZ,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACmB;;;AAE1E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sFAAmB;KAC/B;CACF,CAAC;AAMK,MAAM,mBAAmB;;kGAAnB,mBAAmB;gKAAnB,mBAAmB,kBAHrB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,mBAAmB,uFAFpB,4DAAY;6FAEX,mBAAmB;cAJ/B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACe;AACY;;AAUnE,MAAM,YAAY;;2FAAZ,YAAY;kJAAZ,YAAY,kBALd;YACP,4DAAY;YACZ,0EAAmB;SACpB;mIAEU,YAAY,mBANR,sFAAmB,aAEhC,4DAAY;QACZ,0EAAmB;6FAGV,YAAY;cAPxB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,sFAAmB,CAAC;gBACnC,OAAO,EAAE;oBACP,4DAAY;oBACZ,0EAAmB;iBACpB;aACF;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,sBAAsB;IAEjC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4FALU,sBAAsB;sGAAtB,sBAAsB;QCPnC,oEAAG;QAAA,gFAAqB;QAAA,4DAAI;;6FDOf,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAC4B;;;AACnF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+FAAsB;KAClC;CACF,CAAC;AAMK,MAAM,sBAAsB;;qGAAtB,sBAAsB;sKAAtB,sBAAsB,kBAHxB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,sBAAsB,uFAFvB,4DAAY;6FAEX,sBAAsB;cAJlC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACqB;AACe;;AAU5E,MAAM,eAAe;;8FAAf,eAAe;wJAAf,eAAe,kBALjB;YACP,4DAAY;YACZ,gFAAsB;SACvB;mIAEU,eAAe,mBANX,+FAAsB,aAEnC,4DAAY;QACZ,gFAAsB;6FAGb,eAAe;cAP3B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,+FAAsB,CAAC;gBACtC,OAAO,EAAE;oBACP,4DAAY;oBACZ,gFAAsB;iBACvB;aACF;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACQ;AAEuB;;;AAKnE,MAAM,aAAa;IAwFxB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE/C;;;OAGG;IACI,aAAa,CAAC,EAAS;QAC5B,MAAM,MAAM,GAAG,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;QAEhE,MAAM,EAAE,GAAG,IAAI,oDAAe,CAAS,MAAM,CAAC,CAAC;QAC/C,OAAO,EAAE,CAAC,YAAY,EAAE,CAAC;IAC3B,CAAC;IAED;;;OAGG;IACI,kBAAkB,CAAC,YAAmB;QAC3C,MAAM,cAAc,GAAG,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE;YAC3D,IAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,kFAAc,CAAC,SAAS,CAAC,EAAE,EAAC;gBAC3C,OAAO,IAAI,CAAC,2BAA2B,CAAC,YAAY,EAAmB,CAAC,CAAC,CAAC;aAC3E;iBAAM;gBACL,OAAO,IAAI,CAAC,0BAA0B,CAAC,YAAY,EAAkB,CAAC,CAAC,CAAC;aACzE;YAAA,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,MAAM,EAAE,GAAG,IAAI,oDAAe,CAAW,cAAc,CAAC,CAAC;QACzD,OAAO,EAAE,CAAC,YAAY,EAAE,CAAC;IAC3B,CAAC;IAED;;;OAGG;IACI,YAAY,CAAC,MAAc;QAChC,OAAO,IAAI,oDAAe,CAAS,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,SAAS,EAAE,CAAC;IACnE,CAAC;IAED;;;OAGG;IACI,YAAY,CAAC,MAAc;QAChC,OAAO,IAAI,oDAAe,CAAS,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,SAAS,EAAE,CAAC;IACnE,CAAC;IAEO,2BAA2B,CAAC,YAAoB,EAAE,eAAgC;QACxF,MAAM,gBAAgB,GAAG,YAAY,CAAC,WAAW,EAAE,CAAC;QACpD,OAAO,eAAe,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC;YAChE,eAAe,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC;YAC9D,eAAe,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC;YAC9D,eAAe,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC;YAChE,eAAe,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;IACzE,CAAC;IAEO,0BAA0B,CAAC,YAAoB,EAAE,cAA8B;QACrF,MAAM,gBAAgB,GAAG,YAAY,CAAC,WAAW,EAAE,CAAC;QACpD,OAAO,cAAc,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC;YACpE,cAAc,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC;YAClE,cAAc,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC;YACpE,cAAc,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC;YAC/D,cAAc,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;IACxE,CAAC;;AArJa,qBAAO,GAAY;IAC/B;QACE,EAAE,EAAC,CAAC;QACJ,IAAI,EAAC,kFAAc,CAAC,QAAQ;QAC5B,SAAS,EAAC,QAAQ;QAClB,QAAQ,EAAC,QAAQ;QACjB,UAAU,EAAC,UAAU;QACrB,KAAK,EAAC,kBAAkB;QACxB,KAAK,EAAC,IAAI;QACV,GAAG,EAAC,IAAI;QACR,GAAG,EAAE,IAAI;QACT,IAAI,EAAE,IAAI;KACX;IACD;QACE,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,kFAAc,CAAC,QAAQ;QAC7B,QAAQ,EAAC,QAAQ;QACjB,SAAS,EAAC,MAAM;QAChB,UAAU,EAAC,UAAU;QACrB,KAAK,EAAC,cAAc;QACpB,KAAK,EAAE,IAAI;QACX,GAAG,EAAC,IAAI;QACR,GAAG,EAAE,IAAI;QACT,IAAI,EAAE,IAAI;KACX;IACD;QACE,EAAE,EAAC,CAAC;QACJ,IAAI,EAAE,kFAAc,CAAC,QAAQ;QAC7B,QAAQ,EAAC,WAAW;QACpB,SAAS,EAAC,QAAQ;QAClB,UAAU,EAAC,UAAU;QACrB,KAAK,EAAC,IAAI;QACV,KAAK,EAAC,kBAAkB;QACxB,GAAG,EAAC,IAAI;QACR,GAAG,EAAE,IAAI;QACT,IAAI,EAAE,IAAI;KACX;IACD;QACE,EAAE,EAAC,CAAC;QACJ,IAAI,EAAE,kFAAc,CAAC,QAAQ;QAC7B,QAAQ,EAAC,QAAQ;QACjB,SAAS,EAAC,MAAM;QAChB,UAAU,EAAC,OAAO;QAClB,KAAK,EAAC,aAAa;QACnB,KAAK,EAAC,IAAI;QACV,GAAG,EAAC,IAAI;QACR,GAAG,EAAE,IAAI;QACT,IAAI,EAAE,IAAI;KACX;IACD;QACE,EAAE,EAAC,CAAC;QACJ,IAAI,EAAE,kFAAc,CAAC,QAAQ;QAC7B,QAAQ,EAAC,WAAW;QACpB,SAAS,EAAC,SAAS;QACnB,UAAU,EAAC,UAAU;QACrB,KAAK,EAAC,iBAAiB;QACvB,KAAK,EAAC,IAAI;QACV,GAAG,EAAC,IAAI;QACR,GAAG,EAAE,IAAI;QACT,IAAI,EAAE,IAAI;KACX;IACD;QACE,EAAE,EAAC,CAAC;QACJ,IAAI,EAAE,kFAAc,CAAC,QAAQ;QAC7B,QAAQ,EAAC,UAAU;QACnB,SAAS,EAAC,SAAS;QACnB,UAAU,EAAC,WAAW;QACtB,KAAK,EAAC,sBAAsB;QAC5B,KAAK,EAAC,IAAI;QACV,GAAG,EAAC,IAAI;QACR,GAAG,EAAE,IAAI;QACT,IAAI,EAAE,IAAI;KACX;IACD;QACE,EAAE,EAAC,CAAC;QACJ,IAAI,EAAE,kFAAc,CAAC,QAAQ;QAC7B,QAAQ,EAAC,OAAO;QAChB,SAAS,EAAC,OAAO;QACjB,UAAU,EAAC,UAAU;QACrB,KAAK,EAAC,kBAAkB;QACxB,KAAK,EAAC,IAAI;QACV,GAAG,EAAC,IAAI;QACR,GAAG,EAAE,IAAI;QACT,IAAI,EAAE,IAAI;KACX;CACF,CAAC;0EAtFS,aAAa;gGAAb,aAAa,WAAb,aAAa;6FAAb,aAAa;cADzB,wDAAU;;;;;;;;;;;;;;ACRX;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEQ;AACM;;;AAIlD,MAAM,gBAAgB;IAE3B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,GAAG,CAAC,EAAU;QACZ,MAAM,MAAM,GAAG,IAAI,oDAAe,CAAY,IAAI,CAAC,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,KAAK,EAAC,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QAEpF,OAAO,MAAM,CAAC,YAAY,EAAE,CAAC;IAC/B,CAAC;IAED,WAAW,CAAC,OAAwB;QAClC,MAAM,MAAM,GAAe,EAAE,CAAC;QAC9B,KAAI,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,gBAAgB,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,EAAC;YACrE,IAAI,aAAa,GAAW,IAAI,CAAC;YACjC,IAAI,iBAAiB,GAAW,IAAI,CAAC;YACrC,IAAI,aAAa,GAAW,IAAI,CAAC;YAEjC,MAAM,SAAS,GAAG,gBAAgB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAErD,IAAG,OAAO,EAAC;gBACT,IAAG,OAAO,CAAC,IAAI,KAAK,IAAI,EACxB;oBACE,aAAa,GAAG,SAAS,CAAC,MAAM,KAAK,OAAO,CAAC,IAAI,CAAC;iBACnD;gBACD,IAAG,OAAO,CAAC,IAAI,EACf;oBACE,aAAa,GAAG,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;iBACrF;gBACD,IAAG,OAAO,CAAC,SAAS,EAAC;oBACnB,iBAAiB,GAAG,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAAC,CAAC,KAAK,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;iBAC9F;aACF;YAED,IAAG,aAAa,IAAI,iBAAiB,IAAI,aAAa,EAAC;gBACrD,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;aACjD;SACF;QAED,OAAO,IAAI,oDAAe,CAAc,MAAM,CAAC,CAAC,YAAY,EAAE,CAAC;IACjE,CAAC;;AAEM,2BAAU,GAAgB;IAC/B,IAAI,iEAAS,CAAC,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,SAAS,EAAC,cAAc,EAAC,gBAAgB,CAAC,CAAC;IACnF,IAAI,iEAAS,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC;IACrC,IAAI,iEAAS,CAAC,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC;IAC7C,IAAI,iEAAS,CAAC,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC;IACjD,IAAI,iEAAS,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC;IACnC,IAAI,iEAAS,CAAC,EAAE,EAAE,kBAAkB,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC;IACrD,IAAI,iEAAS,CAAC,EAAE,EAAE,oBAAoB,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC;IACvD,IAAI,iEAAS,CAAC,EAAE,EAAE,oBAAoB,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC;IAC3D,IAAI,iEAAS,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC;IACvC,IAAI,iEAAS,CAAC,EAAE,EAAE,oBAAoB,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC;IACvD,IAAI,iEAAS,CAAC,EAAE,EAAE,qBAAqB,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC;IAC1D,IAAI,iEAAS,CAAC,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,SAAS,EAAC,cAAc,EAAC,gBAAgB,CAAC,CAAC;IACnF,IAAI,iEAAS,CAAC,CAAC,EAAE,oBAAoB,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC;IACtD,IAAI,iEAAS,CAAC,CAAC,EAAE,mBAAmB,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC;IACrD,IAAI,iEAAS,CAAC,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC;IAClD,IAAI,iEAAS,CAAC,CAAC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACnD,IAAI,iEAAS,CAAC,EAAE,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,aAAa,EAAC,OAAO,EAAC,oBAAoB,CAAC,CAAC;IACtF,IAAI,iEAAS,CAAC,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC;IACjD,IAAI,iEAAS,CAAC,EAAE,EAAE,oBAAoB,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,KAAK,EAAC,QAAQ,EAAC,WAAW,CAAC,CAAC;IAC5E,IAAI,iEAAS,CAAC,CAAC,EAAE,oBAAoB,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC;IACzD,IAAI,iEAAS,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,MAAM,EAAC,QAAQ,CAAC,CAAC;IACpD,IAAI,iEAAS,CAAC,CAAC,EAAE,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC;CAC7D,CAAC;gFAjES,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB;6FAAhB,gBAAgB;cAD5B,wDAAU;;;;;;;;;;;;;;ACNX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAI+B;AACW;AAElC;AAK2B;;;AAGvE,MAAM,gBAAgB;IAoH3B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAElC,WAAW,CAAC,OAAiC;QAElD,IAAI,OAAO,GAAG,IAAI,OAAO,CAAgB,CAAC,OAAO,EAAE,MAAM,EAAC,EAAE;YAExD,YAAY;YACZ,MAAM,YAAY,GAAuB,EAAE,CAAC;YAC5C,KAAI,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,gBAAgB,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,EAAC;gBAChE,MAAM,IAAI,GAAG,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC3C,IAAI,aAAa,GAAG,IAAI,CAAC;gBACzB,IAAI,eAAe,GAAG,IAAI,CAAC;gBAE3B,IAAG,OAAO,CAAC,IAAI,EAAC;oBACd,IAAI,IAAI,GAAU,IAAI,CAAC;oBACvB,IAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,kFAAc,CAAC,SAAS,CAAC,EAAE,EAAC;wBACrD,IAAI,GAAqB,IAAI,CAAC,MAAO,CAAC,IAAI,CAAC;qBAC5C;yBACG;wBACF,IAAI,GAAoB,IAAI,CAAC,MAAO,CAAC,SAAS,CAAC;qBAChD;oBACD,aAAa,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;iBAC3E;gBAED,IAAG,OAAO,CAAC,MAAM,EAAC;oBAChB,eAAe,GAAI,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,OAAO,CAAC,MAAM,CAAC;iBACtD;gBACD,IAAG,eAAe,IAAI,aAAa,EAAC;oBAClC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACzB;aACF;YAED,MAAM,WAAW,GAAmB;gBAClC,KAAK,EAAC,YAAY,CAAC,MAAM;gBACzB,KAAK,EAAG,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;aACtE,CAAC;YAEF,OAAO,CAAC,WAAW,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,GAAG,CAAC,EAAS;QACX,MAAM,MAAM,GAAG,IAAI,oDAAe,CAAQ,IAAI,CAAC,CAAC;QAEhD,MAAM,iBAAiB,GAAG,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;QACtF,IAAG,iBAAiB,EAAC;YACnB,MAAM,KAAK,GAAS;gBAClB,EAAE,EAAC,iBAAiB,CAAC,EAAE;gBACvB,UAAU,EAAC,iBAAiB,CAAC,UAAU;gBACvC,MAAM,EAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBAClD,aAAa,EAAC,iBAAiB,CAAC,aAAa;gBAC7C,YAAY,EAAC,iBAAiB,CAAC,YAAY;gBAC3C,iBAAiB,EAAC,iBAAiB,CAAC,iBAAiB;gBACrD,SAAS,EAAE;oBACT,EAAE,EAAE,iBAAiB,CAAC,SAAS,CAAC,EAAE;oBAClC,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,IAAI;oBACtC,MAAM,EAAE,KAAK;oBACb,QAAQ,EAAE,IAAI;oBACd,sBAAsB,EAAE,IAAI;iBAC7B;gBACD,wBAAwB,EAAC,iBAAiB,CAAC,wBAAwB;gBACnE,MAAM,EAAC,iBAAiB,CAAC,MAAM;gBAC/B,gBAAgB,EAAC,iBAAiB,CAAC,gBAAgB;aACpD,CAAC;YAEF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACpB;QAED,OAAO,MAAM,CAAC,YAAY,EAAE,CAAC;IAC/B,CAAC;IAEO,YAAY,CAAC,MAAc;QACjC,IAAG,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,kFAAc,CAAC,SAAS,CAAC,EAAE,EAAC;YAChD,MAAM,eAAe,GAAoB,MAAM,CAAC;YAChD,MAAM,EAAE,GAAoB;gBAC1B,EAAE,EAAC,CAAC;gBACJ,IAAI,EAAC,kFAAc,CAAC,SAAS;gBAC7B,KAAK,EAAC,MAAM,CAAC,KAAK;gBAClB,GAAG,EAAC,eAAe,CAAC,GAAG;gBACvB,GAAG,EAAC,eAAe,CAAC,GAAG;gBACvB,IAAI,EAAC,eAAe,CAAC,IAAI;gBACzB,KAAK,EAAC,eAAe,CAAC,KAAK;aAC5B,CAAC;YAEF,OAAO,EAAE,CAAC;SACX;aACG;YACF,MAAM,cAAc,GAAmB,MAAM,CAAC;YAC9C,MAAM,EAAE,GAAkB;gBACxB,EAAE,EAAC,CAAC;gBACJ,IAAI,EAAE,kFAAc,CAAC,QAAQ;gBAC7B,SAAS,EAAC,cAAc,CAAC,SAAS;gBAClC,QAAQ,EAAC,cAAc,CAAC,QAAQ;gBAChC,UAAU,EAAC,cAAc,CAAC,UAAU;gBACpC,KAAK,EAAC,cAAc,CAAC,KAAK;gBAC1B,KAAK,EAAC,cAAc,CAAC,KAAK;aAC3B,CAAC;YAEF,OAAO,EAAE,CAAC;SACX;IACH,CAAC;;AAzNc,sBAAK,GAA0B;IAC5C;QACE,EAAE,EAAC,CAAC;QACJ,YAAY,EAAC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,2FAAa,CAAC,OAAO,CAAC,CAAC,CAAC;QAChC,MAAM,EAAE,6FAAmB,CAAC,WAAW;QACvC,SAAS,EAAC;YACR,EAAE,EAAC,CAAC;YACJ,IAAI,EAAC,wBAAwB;SAC9B;QACD,iBAAiB,EAAC,eAAe;QACjC,wBAAwB,EAAC,iBAAiB;QAC1C,gBAAgB,EAAC,IAAI;QACrB,aAAa,EAAC,kEAAkE;QAChF,KAAK,EAAC,EAAE;QACR,UAAU,EAAC,IAAI;KAChB;IACD;QACE,EAAE,EAAC,CAAC;QACJ,YAAY,EAAC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAC,2FAAa,CAAC,OAAO,CAAC,CAAC,CAAC;QAC/B,MAAM,EAAE,6FAAmB,CAAC,oBAAoB;QAChD,SAAS,EAAC;YACR,EAAE,EAAC,CAAC;YACJ,IAAI,EAAC,2BAA2B;SACjC;QACD,iBAAiB,EAAC,YAAY;QAC9B,wBAAwB,EAAC,iBAAiB;QAC1C,gBAAgB,EAAC,IAAI;QACrB,aAAa,EAAC,WAAW;QACzB,KAAK,EAAC,EAAE;QACR,UAAU,EAAC,IAAI;KAChB;IACD;QACE,EAAE,EAAC,CAAC;QACJ,YAAY,EAAC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAC,2FAAa,CAAC,OAAO,CAAC,CAAC,CAAC;QAC/B,MAAM,EAAE,6FAAmB,CAAC,aAAa;QACzC,SAAS,EAAC;YACR,EAAE,EAAC,CAAC;YACJ,IAAI,EAAC,qBAAqB;SAC3B;QACD,iBAAiB,EAAC,cAAc;QAChC,wBAAwB,EAAC,iBAAiB;QAC1C,gBAAgB,EAAC,IAAI;QACrB,aAAa,EAAC,SAAS;QACvB,KAAK,EAAC,EAAE;QACR,UAAU,EAAC,IAAI;KAChB;IACD;QACE,EAAE,EAAC,CAAC;QACJ,YAAY,EAAC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAC,2FAAa,CAAC,OAAO,CAAC,CAAC,CAAC;QAC/B,SAAS,EAAC;YACR,EAAE,EAAC,CAAC;YACJ,IAAI,EAAC,mBAAmB;SACzB;QACD,MAAM,EAAE,6FAAmB,CAAC,gBAAgB;QAC5C,iBAAiB,EAAC,2BAA2B;QAC7C,wBAAwB,EAAC,iBAAiB;QAC1C,gBAAgB,EAAC,IAAI;QACrB,aAAa,EAAC,aAAa;QAC3B,KAAK,EAAC,EAAE;QACR,UAAU,EAAC,IAAI;KAChB;IACD;QACE,EAAE,EAAC,CAAC;QACJ,YAAY,EAAC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAC,2FAAa,CAAC,OAAO,CAAC,CAAC,CAAC;QAC/B,SAAS,EAAC;YACR,EAAE,EAAC,CAAC;YACJ,IAAI,EAAC,kBAAkB;SACxB;QACD,MAAM,EAAE,6FAAmB,CAAC,gBAAgB;QAC5C,iBAAiB,EAAC,2BAA2B;QAC7C,wBAAwB,EAAC,iBAAiB;QAC1C,gBAAgB,EAAC,IAAI;QACrB,aAAa,EAAC,aAAa;QAC3B,KAAK,EAAC,EAAE;QACR,UAAU,EAAC,IAAI;KAChB;IACD;QACE,EAAE,EAAC,CAAC;QACJ,YAAY,EAAC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAC,2FAAa,CAAC,OAAO,CAAC,CAAC,CAAC;QAC/B,SAAS,EAAC;YACR,EAAE,EAAC,CAAC;YACJ,IAAI,EAAC,kBAAkB;SACxB;QACD,MAAM,EAAE,6FAAmB,CAAC,gBAAgB;QAC5C,iBAAiB,EAAC,iBAAiB;QACnC,wBAAwB,EAAC,iBAAiB;QAC1C,gBAAgB,EAAC,IAAI;QACrB,aAAa,EAAC,aAAa;QAC3B,KAAK,EAAC,EAAE;QACR,UAAU,EAAC,IAAI;KAChB;IACD;QACE,EAAE,EAAC,CAAC;QACJ,YAAY,EAAC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAC,2FAAa,CAAC,OAAO,CAAC,CAAC,CAAC;QAC/B,SAAS,EAAC;YACR,EAAE,EAAC,CAAC;YACJ,IAAI,EAAC,kBAAkB;SACxB;QACD,MAAM,EAAE,6FAAmB,CAAC,gBAAgB;QAC5C,iBAAiB,EAAC,iBAAiB;QACnC,wBAAwB,EAAC,iBAAiB;QAC1C,gBAAgB,EAAC,IAAI;QACrB,aAAa,EAAC,aAAa;QAC3B,KAAK,EAAC,EAAE;QACR,UAAU,EAAC,IAAI;KAChB;CACF,CAAC;gFAlHS,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB;6FAAhB,gBAAgB;cAD5B,wDAAU;;;;;;;;;;;;;;ACdX;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  {\n    path:'reception', loadChildren:()=> import('./pages/reception/reception.module').then(m=>m.ReceptionModule)\n  },\n  {\n    path:'repair', loadChildren:()=> import('./pages/repair/repair.module').then(m=>m.RepairModule)\n  },\n  {\n    path:'dictionary', loadChildren:()=> import('./pages/dictionary/dictionary.module').then(m=>m.DictionaryModule)\n  },\n  {\n    path:'warehouse', loadChildren:()=> import('./pages/warehouse/warehouse.module').then(m=>m.WarehouseModule)\n  },\n  {\n    path:'admin', loadChildren:()=> import('./pages/admin/admin.module').then(m=>m.AdminModule)\n  },\n  {\n    path:'',\n    redirectTo:'/reception',\n    pathMatch:'full'\n  },\n  {\n    path:'**', component: PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {MenuItem} from 'primeng/api';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'Сервисный центр';\n  items : MenuItem[] = [];\n\n  ngOnInit(): void {\n    this.items = [\n      {\n        label:'Приемка/Выдача', routerLink: ['/reception']\n      },\n      {\n        label:'Ремонт', routerLink:['/repair']\n      },\n      {\n        label:'Склад', routerLink:['/warehouse']\n      },\n      {\n        label:'Справочники', routerLink:['/dictionary']\n      },\n      {\n        label:'Администрирование', routerLink:['/admin']\n      }\n    ];\n  }\n}\n","<!-- Toolbar -->\n<div role=\"banner\">\n  <p-menubar [model]=\"items\"></p-menubar>\n</div>\n\n<div role=\"main\">\n\n  <router-outlet></router-outlet>\n\n  <!-- Footer -->\n  <footer>\n  </footer>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReceptionModule } from './pages/reception/reception.module';\nimport { RepairModule } from './pages/repair/repair.module';\nimport { DictionaryModule } from './pages/dictionary/dictionary.module';\nimport { WarehouseModule } from './pages/warehouse/warehouse.module';\nimport { AdminModule } from './pages/admin/admin.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MenubarModule } from 'primeng/menubar';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommunicatorService } from './communication/communicator.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FormControlBuilder } from './common/form-control-builder';\nimport { PhysicalPresonPipe } from './core/physical-preson.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    MenubarModule,\n    HttpClientModule,\n    ReceptionModule,\n    RepairModule,\n    DictionaryModule,\n    WarehouseModule,\n    AdminModule\n  ],\n  providers: [CommunicatorService, FormControlBuilder],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AbstractControl, FormControl } from '@angular/forms';\nimport { Controls, NgxSubFormComponent, subformComponentProviders } from 'ngx-sub-form';\n\nexport class FormControlBuilder {\n    build<T>(c: { new (...[]): T } ): Controls<T>{\n\n        const formControlObject = {};\n        const value: T = new c();\n\n        for(let key in value){\n            Object.defineProperty(formControlObject, key, \n            {\n                value : new FormControl()\n            });\n        }\n\n        return <Controls<T>><unknown>formControlObject;\n    }\n}\n","export class UnreachableCase {\n    constructor(payload: any) {}\n  }\n","/** Типы команда */\nexport enum CommandEnum {\n    /** Пустая команда */\n    Nop = 1,\n\n    /** Команда фильтрации */\n    FilterCommand = 2,\n\n    /** Команда фильтрации */\n    FilterStatusCommand = 3,\n\n    /** Команда пагинации */\n    PagingCommand = 4,\n\n    /** Команда оповещения о загрузке данных*/\n    ReceptionRegistryLoadedCommand = 5,\n    \n    /** Команда изменения вида реестра */\n    ChangeRegistryView = 6,\n}\n","import { CommandEnum } from './command-enum.enum';\n\n/** Комманда взаимодействия компонентов */\nexport class CommandType<TData> {\n    /**\n     * Инициализирует команду взаимодействия компонентов.\n     * @param type Тип команды.\n     * @param data Данные команды.\n     */\n    constructor(public readonly type : CommandEnum, public readonly data : TData){\n\n    }\n}\n","import { CommandType } from '../command-type';\nimport { CommandEnum } from \"../command-enum.enum\";\n\nexport class ChangeRegistryViewCommand extends CommandType<ChangeRegistryViewCommandData>{\n    constructor(data: ChangeRegistryViewCommandData){\n        super(CommandEnum.ChangeRegistryView, data);\n    }\n}\n\nexport class ChangeRegistryViewCommandData {\n    constructor(public viewType:ViewType){\n    }\n}\n\nexport enum ViewType{\n    Grid = 1,\n    Card = 2\n}","import { CommandType } from '../command-type';\nimport { CommandEnum } from \"../command-enum.enum\";\n\nexport class FilterCommand extends CommandType<FilterCommandData>{\n    constructor(data : FilterCommandData){\n        super(CommandEnum.FilterCommand, data);\n    }\n}\n\nexport class FilterCommandData{\n    text:string;\n}\n","import { CommandType } from '../command-type';\nimport { CommandEnum } from \"../command-enum.enum\";\nimport { EnumType } from 'src/app/domain/enums/enum-type';\n\nexport class FilterStatusCommand extends CommandType<FilterStatusCommandData>{\n    constructor(data: FilterStatusCommandData){\n        super(CommandEnum.FilterStatusCommand, data);\n    }\n}\n\nexport class FilterStatusCommandData {\n    constructor(public status: EnumType){}\n}\n","import { CommandType } from '../command-type';\nimport { CommandEnum } from \"../command-enum.enum\";\n\nexport class NopCommand extends CommandType<void> {\n    constructor(){\n        super(CommandEnum.Nop);\n    }\n}","import { CommandType } from '../command-type';\nimport { CommandEnum } from \"../command-enum.enum\";\nimport { Constants } from 'src/app/models/constants';\n\nexport class PagingCommand extends CommandType<PagingCommandData>{\n    constructor(data: PagingCommandData){\n        super(CommandEnum.PagingCommand, data);\n    }\n}\n\nexport class PagingCommandData {\n    skip:number = 0;\n    take:number = Constants.ReceptionRegistryPageSize;\n    constructor(page: number, pageSize:number){\n        this.skip = page * pageSize;\n        this.take = pageSize;\n    }\n}","import { CommandType } from '../command-type';\nimport { CommandEnum } from \"../command-enum.enum\";\n\nexport class ReceptionRegistryLoadedCommand extends CommandType<ReceptionRegistryLoadedCommandData>{\n    constructor(data: ReceptionRegistryLoadedCommandData){\n        super(CommandEnum.ReceptionRegistryLoadedCommand, data);\n    }\n}\n\nexport class ReceptionRegistryLoadedCommandData {\n    constructor(public readonly totalRows: number){\n    }\n}","import { Directive, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable} from 'rxjs';\nimport { CommandType } from './command-type';\nimport { NopCommand } from \"./commands/nop-command\";\n\n/** Директива взаимодействия компонентов */\n@Injectable()\nexport class CommunicatorService {\n  private state = new BehaviorSubject<CommandType<any>>(new NopCommand());\n\n  /** Источник команды */\n  public CommandSource = this.state.asObservable();\n\n  //constructor() { }\n\n  ngOnInit() { }\n  \n  /**\n   * Отправляет команду подпискам.\n   * @param cmd Команда.\n   */\n  sendCommand(cmd: CommandType<any>){\n    this.state.next(cmd);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Client } from '../domain/client';\nimport { ClientTypeEnum } from '../domain/enums/client-type-enum.enum';\nimport { PhysicalPerson } from '../domain/order/physical-person';\n\n@Pipe({\n  name: 'physicalPreson'\n})\nexport class PhysicalPresonPipe implements PipeTransform {\n\n  transform(value: Client, ...args: unknown[]): string {\n    if(!value || value.type.id == ClientTypeEnum.Juridical.id){\n      return null;\n    }\n    const physicalPerson = value as PhysicalPerson;\n    const hasFirstName = physicalPerson.firstName || physicalPerson.firstName.length;\n    const hasMiddleName = physicalPerson.middleName || physicalPerson.middleName.length;\n\n    return `${physicalPerson.lastName}${hasFirstName ? ' '+physicalPerson.firstName.substr(0, 1)+'.':null}${hasMiddleName ? ' '+physicalPerson.middleName.substr(0,1)+'.':null}`;\n  }\n\n}\n","import { EnumType } from \"./enum-type\";\n\n/** Тип клиента */\nexport class ClientTypeEnum {\n    /** Физ. лицо */\n    static readonly Phisical = new EnumType(1,'Физическое лицо');\n    /** Юр. лицо */\n    static readonly Juridical = new EnumType(2,'Юридическое лицо');\n}\n","/** Базовый класс для перечислений */\nexport class EnumType {\n    constructor(public readonly id: number, public readonly text:string){\n    }\n}\n","import { EnumType } from \"./enum-type\";\n\n/** Статус заказа на ремонт */\nexport class OrderItemStatusEnum {\n    /** Принят */\n    static readonly Recieved = new EnumType(1, 'Принят');\n    /** Диагностика */\n    static readonly Diagnostics = new EnumType(2, 'Диагностика');\n    /** Диагностика завершена */\n    static readonly DiagnosticsCompleted = new EnumType(3, 'Диагностика завершена');\n    /** Заказ деталей */\n    static readonly PartsOrdering = new EnumType(4, 'Заказ деталей');\n    /** Детали поступили */\n    static readonly PartsDelivered = new EnumType(5, 'Детали поступили');\n    /** В работе */\n    static readonly RepairInProgress = new EnumType(6, 'В работе');\n    /** Требуется оплата */\n    static readonly PaymentNeeded = new EnumType(7, 'Требуется оплата');\n    /** Завершено */\n    static readonly Completed = new EnumType(8, 'Завершено');\n}\n","/** Модель оборудования */\nexport class EquipmentBase {\n    /** Идентификатор обродования в справочнике */\n    id:number;\n    /** Наименование */\n    name:string;\n\n    constructor(id:number, name:string){\n        this.id=id;\n        this.name=name;\n    }\n}\n","import { EquipmentBase } from \"../equipment-base\";\n\nexport class Equipment extends EquipmentBase {\n    availableComplectation: string[];\n    isNode:boolean;\n    parentId?:number;\n\n    constructor(id:number, name:string, isNode:boolean, parentId:number, availableComplectation: string[]){\n            super(id, name);\n            this.availableComplectation=availableComplectation;\n            this.isNode=isNode;\n            this.parentId=parentId;\n        }\n}\n","export class Constants {\n    static readonly ReceptionRegistryPageSize = 5;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n  public RequestedUrl : string = '';\n  constructor(private router : ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.RequestedUrl = this.router.snapshot.url.join('');\n  }\n\n}\n","<img src=\"../../assets/images/404-page-not-found.svg\" />\n<h1>Страница {{RequestedUrl}} не найдена.</h1>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.scss']\n})\nexport class AdminPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-page works!</p>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminPageComponent } from './admin-page/admin-page.component';\nconst routes: Routes = [\n   {\n     path: '',\n     component: AdminPageComponent\n   }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {AdminRoutingModule} from './admin-routing.module';\nimport { AdminPageComponent } from './admin-page/admin-page.component';\n\n\n@NgModule({\n  declarations: [AdminPageComponent],\n  imports: [\n    CommonModule,\n    AdminRoutingModule\n  ]\n})\nexport class AdminModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dictionary-page',\n  templateUrl: './dictionary-page.component.html',\n  styleUrls: ['./dictionary-page.component.scss']\n})\nexport class DictionaryPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dictionary-page works!</p>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DictionaryPageComponent } from \"./dictionary-page/dictionary-page.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DictionaryPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DictionaryRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {DictionaryRoutingModule} from './dictionary-routing.module';\nimport { DictionaryPageComponent } from './dictionary-page/dictionary-page.component';\n\n\n@NgModule({\n  declarations: [DictionaryPageComponent],\n  imports: [\n    CommonModule,\n    DictionaryRoutingModule\n  ]\n})\nexport class DictionaryModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { Order } from \"../../../domain/order/order\";\nimport { ConfirmationService } from 'primeng/api';\nimport { ReceptionService } from 'src/app/services/ReceptionService/reception.service';\n\n@Component({\n  selector: 'app-reception-edit-page',\n  templateUrl: './reception-edit-page.component.html',\n  styleUrls: ['./reception-edit-page.component.scss'],\n  providers: [ConfirmationService]\n})\nexport class ReceptionEditPageComponent  implements OnInit {\n\n  isNewOrder:boolean = false;\n  order: Order;\n  isModified:boolean = false;\n  showCloseFormConfirmation:boolean = false;\n\n  constructor(\n    private activatedRoute : ActivatedRoute, \n    private title : Title, \n    private receptionService: ReceptionService,\n    private confirmationService: ConfirmationService) { \n  }\n\n  ngOnInit(): void {\n    const orderId = this.activatedRoute.snapshot.params['id'];\n    if(orderId){\n      this.title.setTitle(`Редактирование заказа номер ${orderId}`);\n\n      this.receptionService.get(orderId).subscribe(r => {\n        this.order = r;\n        this.isNewOrder = false;\n      });\n\n    }\n    else{\n      this.title.setTitle('Создание заказа');\n      this.isNewOrder = true;\n    }\n  }\n\n  onOrderChange(order: Order){\n    console.log('changed');\n    this.isModified = true;\n  }\n\n  onCancelButtonClick(event){\n    if(this.isModified){\n      this.confirmationService.confirm({\n        header:'Запрос',\n        message:'Данные не сохранены. Вы действительно хотете перейти ?',\n        accept:()=>this.navigateBack()\n      });\n    }\n    else{\n      this.navigateBack();\n    }\n  }\n  \n  private navigateBack(){\n    window.history.back();\n  }\n}\n","<div class=\"layout-content content-section\">\n    <div class=\"card\">\n        <app-reception-edit [order]=\"order\" (orderChanged)=\"onOrderChange(order)\"></app-reception-edit>\n    </div>\n\n    <div class=\"p-md-offset-1 p-fluid p-formgrid p-grid p-ml-1 p-mr-1 card p-ai-center vertical-container\">\n        <div class=\"p-field button-div\">\n            <button pButton pRipple icon=\"pi pi-check\" label=\"Сохранить\"></button>\n        </div>\n        <div class=\"p-field button-div\">\n            <button pButton pRipple icon=\"pi pi-times\" class=\"p-button-secondary\" label=\"Отменить\" (click)=\"onCancelButtonClick($event)\"></button>\n        </div>\n    </div>\n</div>\n<p-confirmDialog icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Controls, NgxSubFormRemapComponent, subformComponentProviders } from 'ngx-sub-form';\nimport { Dialog } from 'primeng/dialog';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Client } from 'src/app/domain/client';\nimport { ClientBacket } from 'src/app/domain/client-backet';\nimport { ClientTypeEnum } from 'src/app/domain/enums/client-type-enum.enum';\nimport { EnumType } from 'src/app/domain/enums/enum-type';\nimport { ClientService } from 'src/app/services/ClientService/client.service';\nimport { UnreachableCase } from \"../../../../../common/unreachable-case\";\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.scss'],\n  providers: subformComponentProviders(ClientComponent)\n})\nexport class ClientComponent extends NgxSubFormRemapComponent<Client, ClientBacket> implements OnInit {\n\n  public isSaveAvailable : boolean = false;\n  public showChooseClientDlg : boolean = false;\n\n  public Juridical:EnumType = ClientTypeEnum.Juridical;\n  public Phisical:EnumType = ClientTypeEnum.Phisical;\n\n  public clientTypes:EnumType[] = [ClientTypeEnum.Juridical, ClientTypeEnum.Phisical];\n  public selected:FormControl = new FormControl();\n  public modelChanged$:Observable<ClientBacket>;\n  public clientByFilter$:Observable<Client[]>;\n  public changed:boolean = false;\n  public clientFilter:FormControl = new FormControl(null);\n\n  constructor(private clientService: ClientService){\n    super();\n  }\n\n  ngOnInit(){\n    this.modelChanged$ = this.formGroup.valueChanges;\n    this.clientByFilter$ = this.clientService.getClientsByFilter(this.clientFilter.value);\n  }\n\n  protected transformToFormGroup(obj: Client, defaultValues: Partial<ClientBacket>): ClientBacket {\n    return {\n      juridical: obj.type.id === this.Juridical.id ? obj : null,\n      physical: obj.type.id === this.Phisical.id ? obj : null,\n      type:obj.type.id === this.Phisical.id ? this.Phisical : this.Juridical\n    };\n  }\n\n  protected transformFromFormGroup(formValue: ClientBacket): Client {\n    switch(formValue.type.id){\n      case this.Juridical.id:\n        return formValue.juridical;\n      case this.Phisical.id:\n        return formValue.physical;\n      default:\n        throw new UnreachableCase(formValue.type);\n    }\n  }\n\n  protected getFormControls(): Controls<ClientBacket> {\n    return {\n      juridical: new FormControl(),\n      physical: new FormControl(),\n      type:new FormControl()\n    };\n  }\n\n  //#region Event Handlers\n  onClientChange(basket: ClientBacket):string{\n    this.changed = this.formGroup.touched;\n\n    const clientType = this.formGroupControls.type.value.id;\n    switch(clientType){\n      case this.Juridical.id:\n        this.isSaveAvailable = this.formGroupControls.juridical.value.id !== 0 && this.changed;\n        break;\n      case this.Phisical.id:\n        this.isSaveAvailable = this.formGroupControls.physical.value.id !== 0 && this.changed;\n        break;\n      default:\n        this.isSaveAvailable = false;\n    }\n    return null;\n  }\n\n  public onChooseClientDlgButtonClick(event){\n    this.showChooseClientDlg = true;\n  }\n\n  public async onSaveButtonClick(event){\n    const client = this.getClientModel();\n\n    await this.clientService.updateClient(client);\n    this.changed = false;\n  }\n\n  public onChooseClientDlgShowing($event, dialog: Dialog){\n    dialog.maximize();\n  }\n\n  public onChooseClientDlgHiding($event){\n    this.hideDialog();\n  }\n\n  public async onSaveAsNewButtonClick(event){\n    const client = this.getClientModel();\n\n    const clientId = await this.clientService.createClient(client);\n    client.id = clientId;\n    this.changed = false;\n  }\n  //#endregion\n\n  private getClientModel() {\n    const clientType = this.formGroupControls.type.value.id;\n    let client = clientType == ClientTypeEnum.Juridical.id\n      ? this.formGroupControls.juridical.value\n      : this.formGroupControls.physical.value;\n      \n    return client;\n  }\n\n  private hideDialog(){\n    this.showChooseClientDlg = false;\n  }\n}\n","<div [formGroup]=\"formGroup\" class=\"card\">\n    <div class=\"p-fluid p-grid\">\n        <label for=\"clientName\" class=\"control-title p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Клиент<span *ngIf=\"modelChanged$ | async as basket\">{{onClientChange(basket)}}<span *ngIf=\"changed\">*</span></span></label>\n        <div class=\"p-col p-grid p-fluid\">\n            <div class=\"p-col-4 p-grid p-fluid\">\n                <div class=\"p-col p-field-checkbox\" *ngFor=\"let clientType of clientTypes\">\n                    <input type=\"radio\"  \n                        [id]=\"clientType.id\"\n                        [value]=\"clientType\"\n                        [formControlName]=\"formControlNames.type\"/>\n                    <label [for]=\"clientType.id\">{{clientType.text}}</label>\n                </div>\n            </div>\n            <div class=\"p-col p-grid p-fluid\">\n                <p-button id=\"save\" pRipple icon=\"pi pi-check\" label=\"Сохранить\" [disabled]=\"!isSaveAvailable\" class=\"p-field p-mr-1 pml-1\"></p-button>\n                <p-button id=\"saveAsNew\" pRipple icon=\"pi pi-check\" label=\"Сохранить как новый\" [disabled]=\"!isSaveAvailable\" class=\"p-field p-mr-1 pml-1\"></p-button>\n                <button id=\"chooseClientDlgButton\" pButton pRipple icon=\"pi pi-ellipsis-h\" class=\"p-field p-mr-1 pml-1\" (click)=\"onChooseClientDlgButtonClick($event)\"></button>\n            </div>\n        </div>\n    </div>\n    <app-juridical-person   [style.display]=\"formGroupControls.type.value.id === Juridical.id ? 'block': 'none'\"\n                            [formControlName]=\"formControlNames.juridical\">\n    </app-juridical-person>\n    <app-physical-person    [style.display]=\"formGroupControls.type.value.id === Phisical.id ? 'block': 'none'\"\n                            [formControlName]=\"formControlNames.physical\">\n    </app-physical-person>\n</div>\n<p-dialog   header=\"Выбор заказчика\" \n            [(visible)]=\"showChooseClientDlg\"\n            [modal]=\"true\"\n            [maximizable]=\"true\"\n            [style]=\"{width: '100vw'}\"\n            contentStyleClass=\"layout-content content-section\"\n            styleClass=\"p-fluid\"\n            (onShow)=\"onChooseClientDlgShowing($event, dialog)\"\n            (onHide)=\"onChooseClientDlgHiding($event)\" #dialog>\n    <div class=\"p-grid p-fluid\">\n        <div class=\"p-grid p-col\">\n            <label for=\"clientFilter\" class=\"control-title p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Фильтр</label>\n            <div class=\"p-col\">\n                <input id=\"clientFilter\" type=\"text\" pInputText [formControlName]=\"clientFilter\"/>\n            </div>\n        </div>\n        <div class=\"p-col\">\n            <p-table *ngIf=\"clientByFilter$ | async as filteredClients\" \n                [value]=\"filteredClients\"\n                [rowHover]=\"true\"\n                dataKey=\"id\"\n                styleClass=\"p-datatable-sm p-datatable-gridlines\">\n            \n                <ng-template pTemplate=\"colgroup\">\n                    <colgroup>\n                        <col style=\"width: 15%;\">\n                        <col style=\"width: 55%;\">\n                        <col style=\"width: 15%;\">\n                        <col style=\"width: 15%;\">\n                    </colgroup>\n                </ng-template>\n            \n                <ng-template pTemplate=\"header\">\n                    <tr class=\"table-header\">\n                        <th>Тип</th>\n                        <th>Наименование</th>\n                        <th>Телефон</th>\n                        <th>Электронная почта</th>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-client>\n                    <tr>\n                        <td>{{client.type.text}}</td>\n                        <td>\n                            <ul class=\"cell-list\">\n                                <li *ngIf=\"client.type.id == Phisical.id\">{{client | physicalPreson}}</li> \n                                <li *ngIf=\"client.type.id == Juridical.id\">{{client.fullname}}({{client.inn}}/{{client.kpp}})</li> \n                            </ul>\n                        </td>\n                        <td>{{client.phone}}</td>\n                        <td>{{client.email}}</td>\n                    </tr>\n                </ng-template>\n            </p-table>\n        </div>\n    </div>\n</p-dialog>","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Controls, NgxSubFormComponent, subformComponentProviders } from 'ngx-sub-form';\nimport { JuridicalPerson } from 'src/app/domain/order/juridical-person';\n\n@Component({\n  selector: 'app-juridical-person',\n  templateUrl: './juridical-person.component.html',\n  styleUrls: ['./juridical-person.component.scss'],\n  providers: subformComponentProviders(JuridicalPersonComponent)\n})\nexport class JuridicalPersonComponent extends NgxSubFormComponent<JuridicalPerson> {\n\n  protected getFormControls(): Controls<JuridicalPerson> {\n    return {\n      id:new FormControl(),\n      name:new FormControl(),\n      inn:new FormControl(),\n      kpp:new FormControl(),\n      email:new FormControl(),\n      phone:new FormControl(),\n      type:new FormControl(),\n    };\n  }\n}\n","<div class=\"p-fluid p-grid\" [formGroup]=\"formGroup\">\n    <div class=\"p-col-6 p-grid p-fluid\">\n         <label class=\"control-title p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Наименование</label>\n        <div class=\"p-col\">\n            <input type=\"text\" pInputText [formControlName]=\"formControlNames.name\" />\n        </div>\n    </div>\n    <div class=\"p-col-6 p-grid p-fluid\">\n            <label class=\"control-title p-col-12 p-mb-2 p-md-2 p-mb-md-0\">ИНН</label>\n        <div class=\"p-col\">\n            <input type=\"text\" pInputText [formControlName]=\"formControlNames.inn\" />\n        </div>\n    </div>\n    <div class=\"p-col-6 p-grid p-fluid\">\n        <label class=\"control-title p-col-12 p-mb-2 p-md-2 p-mb-md-0\">КПП</label>\n        <div class=\"p-col\">\n            <input type=\"text\" pInputText [formControlName]=\"formControlNames.kpp\" />\n        </div>\n    </div>\n    <div class=\"p-col-6 p-grid p-fluid\">\n        <label class=\"control-title p-col-12 p-mb-2 p-md-2 p-mb-md-0\">e-mail</label>\n        <div class=\"p-col\">\n            <input type=\"text\" pInputText [formControlName]=\"formControlNames.email\" />\n        </div>\n    </div>\n    <div class=\"p-col-6 p-grid p-fluid\">\n        <label class=\"control-title p-col-12 p-mb-2 p-md-2 p-mb-md-0\">тел.</label>\n        <div class=\"p-col\">\n            <input type=\"text\" pInputText [formControlName]=\"formControlNames.phone\" />\n        </div>\n    </div>\n</div>\n","import { SourceMapGenerator } from '@angular/compiler/src/output/source_map';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormsModule } from '@angular/forms';\nimport { Controls, NgxSubFormComponent, subformComponentProviders } from 'ngx-sub-form';\nimport { PhysicalPerson } from 'src/app/domain/order/physical-person';\n\n@Component({\n  selector: 'app-physical-person',\n  templateUrl: './physical-person.component.html',\n  styleUrls: ['./physical-person.component.scss'],\n  providers: subformComponentProviders(PhysicalPersonComponent)\n})\nexport class PhysicalPersonComponent extends NgxSubFormComponent<PhysicalPerson> {\n  constructor(){\n    super();\n    this.emitNullOnDestroy = false;\n  }\n  \n  protected getFormControls(): Controls<PhysicalPerson> {\n    return {\n        id:new FormControl(),\n        email:new FormControl(),\n        firstName:new FormControl(),\n        lastName:new FormControl(),\n        middleName:new FormControl(),\n        phone:new FormControl(),\n        type:new FormControl(),\n    };\n  }\n}\n","<div class=\"p-fluid p-grid\" [formGroup]=\"formGroup\">\n    <div class=\"p-col-6 p-grid p-fluid\">\n         <label class=\"control-title p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Имя</label>\n        <div class=\"p-col\">\n            <input type=\"text\" pInputText [formControlName]=\"formControlNames.firstName\" />\n        </div>\n    </div>\n    <div class=\"p-col-6 p-grid p-fluid\">\n            <label class=\"control-title p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Фамилия</label>\n        <div class=\"p-col\">\n            <input type=\"text\" pInputText [formControlName]=\"formControlNames.lastName\" />\n        </div>\n    </div>\n    <div class=\"p-col-6 p-grid p-fluid\">\n        <label class=\"control-title p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Отчество</label>\n        <div class=\"p-col\">\n            <input type=\"text\" pInputText [formControlName]=\"formControlNames.middleName\" />\n        </div>\n    </div>\n    <div class=\"p-col-6 p-grid p-fluid\">\n        <label class=\"control-title p-col-12 p-mb-2 p-md-2 p-mb-md-0\">e-mail</label>\n        <div class=\"p-col\">\n            <input type=\"text\" pInputText [formControlName]=\"formControlNames.email\" />\n        </div>\n    </div>\n    <div class=\"p-col-6 p-grid p-fluid\">\n        <label class=\"control-title p-col-12 p-mb-2 p-md-2 p-mb-md-0\">тел.</label>\n        <div class=\"p-col\">\n            <input type=\"text\" pInputText [formControlName]=\"formControlNames.phone\" />\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Controls, NgxSubFormComponent, subformComponentProviders } from 'ngx-sub-form';\nimport { TreeNode } from 'primeng/api';\nimport { Dialog } from 'primeng/dialog';\nimport { Equipment } from 'src/app/domain/order/equipment';\nimport { EquipmentService } from 'src/app/services/EquipmentService/equipment.service';\n\n@Component({\n  selector: 'app-equipment',\n  templateUrl: './equipment.component.html',\n  styleUrls: ['./equipment.component.scss'],\n  providers: subformComponentProviders(EquipmentComponent)\n})\nexport class EquipmentComponent extends NgxSubFormComponent<Equipment>{\n  treeNodes:TreeNode[] = [];\n  selectedNode:TreeNode = null;\n  selectedEquipment:Equipment = null;\n  equipments: Equipment[] = [];\n\n  constructor(private equipmentService : EquipmentService){\n    super();\n  }\n\n  showChooseEquipmentDlg:boolean = false;\n\n  protected getFormControls(): Controls<Equipment> {\n    return {\n      id:new FormControl(),\n      name:new FormControl(),\n      availableComplectation: new FormControl(),\n      isNode:new FormControl(),\n      parentId:new FormControl()\n    };\n  }\n\n  onClickChooseEquipmentDlgButton(event){\n    this.showChooseEquipmentDlg = true;\n  }\n\n  onChooseEquipmentShowing(event, dialog: Dialog){\n    dialog.maximize();\n    this.equipmentService.getByFilter({ node:true }).subscribe(response=>{\n      this.treeNodes = [];\n      this.buildTree(this.treeNodes, null, response, null);\n    });\n  }\n\n  onSaveButtonClick(event){\n    this.formGroupControls.availableComplectation.setValue(this.selectedEquipment.availableComplectation);\n    this.formGroupControls.id.setValue(this.selectedEquipment.id);\n    this.formGroupControls.isNode.setValue(this.selectedEquipment.isNode);\n    this.formGroupControls.name.setValue(this.selectedEquipment.name);\n    this.formGroupControls.parentId.setValue(this.selectedEquipment.parentId);\n\n    this.showChooseEquipmentDlg = false;\n  }\n\n  onChooseEquipmentHiding(event){\n    this.hideDialog();\n  }\n\n  onCancelButtonClick(event){\n    this.hideDialog();\n  }\n  \n  loadGroupEquipments(event){\n    const parentIds = this.getChildrenNodesIds([], this.selectedNode);\n    this.equipmentService.getByFilter({ parentIds: parentIds, node:false}).subscribe(r=>{\n      this.equipments = r;\n      this.selectedEquipment = null;\n    });\n  }\n  \n  private hideDialog(){\n    this.showChooseEquipmentDlg = false;\n  }\n\n  private buildTree(treeNodes:TreeNode[], parentNode:TreeNode, equipments: Equipment[], parentId:number){\n    const children = equipments.filter((equipment, index, array)=>{\n      return equipment.isNode && equipment.parentId === parentId;\n    });\n\n    for(var i = 0; i< children.length; i++){\n      const child = children[i];\n      const currentNode: TreeNode = {\n        key: `${child.id}`,\n        label: child.name,\n        data: child,\n        expandedIcon: \"pi pi-folder-open\",\n        collapsedIcon: \"pi pi-folder\",\n        children:[]\n      };\n\n      if(parentNode === null){\n        treeNodes.push(currentNode);\n      }\n      else{\n          parentNode.children.push(currentNode);\n      }\n\n      this.buildTree(treeNodes, currentNode, equipments, child.id);\n    }\n  }\n\n  private getChildrenNodesIds(childrenNodeIds: number[], parent: TreeNode): number[]{\n    childrenNodeIds.push(parent.data.id);\n    const children = parent.children.filter((e,i,a)=>e.data.parentId == parent.data.id);\n    for(var i = 0; i < children.length; i++){\n      this.getChildrenNodesIds(childrenNodeIds, children[i])\n    }\n\n    return childrenNodeIds;\n  }\n}\n","<div [formGroup]=\"formGroup\" class=\"p-fluid p-field p-grid\">\n    <label for=\"equipment\" class=\"control-title p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Оборудование</label>\n    <div class=\"p-col p-grid p-fluid\">\n        <div class=\"p-col\">\n            <input pInputText id=\"equipment\" type=\"text\" [formControlName]=\"formControlNames.name\" />\n        </div>\n        <div class=\"\">\n            <button id=\"chooseEquipmentDlgButton\" pButton pRipple icon=\"pi pi-ellipsis-h\" (click)=\"onClickChooseEquipmentDlgButton($event)\"></button>\n        </div>\n    </div>\n</div>\n\n<p-dialog \n    header=\"Выбор оборудования\" \n    [(visible)]=\"showChooseEquipmentDlg\"\n    [modal]=\"true\"\n    [maximizable]=\"true\"\n    [style]=\"{width: '100vw'}\"\n    contentStyleClass=\"layout-content content-section\"\n    styleClass=\"p-fluid\"\n    (onShow)=\"onChooseEquipmentShowing($event, dialog)\"\n    (onHide)=\"onChooseEquipmentHiding($event)\" #dialog>\n    <div class=\"card p-grid\">\n        <!-- tree -->\n        <div class=\"p-field p-grid\">\n            <p-tree \n                [value]=\"treeNodes\" \n                selectionMode=\"single\" \n                [(selection)]=\"selectedNode\"\n                (onNodeSelect)=\"loadGroupEquipments($event)\"\n                scrollHeight=\"flex\">\n            </p-tree>\n        </div>\n        <!-- table -->\n        <div class=\"p-col\">\n            <p-table\n                id=\"equipmentTableRowSelected\"\n                [value]=\"equipments\"    \n                [rowHover]=\"true\"\n                dataKey=\"id\"\n                styleClass=\"p-datatable-sm p-datatable-gridlines\"\n                [(selection)]=\"selectedEquipment\"\n                selectionMode=\"single\">\n                \n                <ng-template pTemplate=\"header\">\n                    <tr class=\"table-header\">\n                        <th>Наименование</th>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-product >\n                    <tr [pSelectableRow]=\"product\">\n                        <td>{{product.name}}</td>\n                    </tr>\n                </ng-template>        \n            </p-table>\n        </div>\n    </div>\n    <div class=\"p-fluid p-formgrid p-grid card p-ai-center vertical-container\">\n        <div class=\"p-field button-div\">\n            <button id=\"save\" pButton pRipple icon=\"pi pi-check\" label=\"Сохранить\" [disabled]=\"!selectedEquipment\" (click)=\"onSaveButtonClick($event)\"></button>\n        </div>\n        <div class=\"p-field button-div\">\n            <button id=\"cancel\" pButton pRipple icon=\"pi pi-times\" class=\"p-button-secondary\" label=\"Отменить\" (click)=\"onCancelButtonClick($event)\"></button>\n        </div>\n    </div>\n\n</p-dialog>","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Controls, NgxSubFormComponent, subformComponentProviders } from 'ngx-sub-form';\nimport { EnumType } from 'src/app/domain/enums/enum-type';\n\n@Component({\n  selector: 'app-order-status-view',\n  templateUrl: './order-status-view.component.html',\n  styleUrls: ['./order-status-view.component.scss'],\n  providers: subformComponentProviders(OrderStatusViewComponent)\n})\nexport class OrderStatusViewComponent extends NgxSubFormComponent<EnumType> {\n\n  constructor() {\n    super();\n   }\n\n  protected getFormControls(): Controls<EnumType> {\n    return {\n      id:new FormControl(),\n      text:new FormControl()\n    };\n  }\n\n}\n","<div class=\"p-field p-grid\" [formGroup]=\"formGroup\">\n    <div class=\"p-field\">\n        <label class=\"control-title p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Статус</label>\n    </div>\n    <div class=\"p-col\">\n        <label class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">{{formGroupControls.text.value}}</label>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { NgxRootFormComponent, Controls, DataInput, subformComponentProviders, NgxAutomaticRootFormComponent } from 'ngx-sub-form';\nimport { Order } from 'src/app/domain/order/order';\n\n@Component({\n  selector: 'app-reception-edit',\n  templateUrl: './reception-edit.component.html',\n  styleUrls: ['./reception-edit.component.scss'],\n  providers: subformComponentProviders(ReceptionEditComponent)\n})\nexport class ReceptionEditComponent extends NgxAutomaticRootFormComponent<Order> {\n  \n  @DataInput()\n  @Input('order')\n  dataInput: Required<Order>;\n\n  @Output('orderChanged')\n  dataOutput: EventEmitter<Order> = new EventEmitter<Order>();\n  \n  protected getFormControls(): Controls<Order> {\n    return {\n      id: new FormControl(),\n      creationDate: new FormControl(),\n      client:new FormControl(),\n      status:new FormControl(),\n      equipment:new FormControl(),\n      defectDescription:new FormControl(),\n      externalStateDescription:new FormControl(),\n      diagnosticResult:new FormControl(),\n      complectation:new FormControl(),\n      repairCost:new FormControl(),\n    };\n  }\n}\n","<form [formGroup]=\"formGroup\">\n    <!-- дата, номер, статус -->\n    <div class=\"p-field p-grid\">\n        <div class=\"p-field\">\n            <label class=\"control-title p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Дата</label>\n        </div>\n        <div class=\"p-field\">\n            <label class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">{{formGroupControls.creationDate.value | date:'dd.MM.yyyy'}}</label>\n        </div>\n        <div class=\"p-field\">\n            <label class=\"control-title p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Номер</label>\n        </div>\n        <div class=\"p-field\">\n            <label class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">{{formGroupControls.id.value}}</label>\n        </div>\n        <app-order-status-view [formControlName]=\"formControlNames.status\"></app-order-status-view>\n    </div>\n\n    <!-- результат диагностики -->\n    <div class=\"p-field p-grid\">\n        <div class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">\n            <label class=\"control-title\">Результат диагностики</label>\n        </div>\n        <div class=\"p-col\">\n            <label class=\"\">{{formGroupControls.diagnosticResult.value}}</label>\n        </div>\n    </div>\n\n    <!-- стоимость -->\n    <div class=\"p-field p-grid\">\n        <div class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">\n            <label class=\"control-title\">Стоимость</label>\n        </div>\n        <div class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">\n            <label class=\"\">{{formGroupControls.repairCost.value}}</label>\n        </div>\n    </div>\n\n    <app-equipment [formControlName]=\"formControlNames.equipment\" ></app-equipment>\n    <app-client [formControlName]=\"formControlNames.client\"></app-client>\n\n    <!-- жалоба -->\n    <div class=\"p-fluid p-field p-grid\">\n        <label for=\"defectDescription\" class=\"control-title p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Жалоба</label>\n        <div class=\"p-col\">\n            <textarea id=\"defectDescription\" [formControlName]=\"formControlNames.defectDescription\" class=\"p-inputtextarea p-inputtext p-component\" pInputTextarea></textarea>\n        </div>\n    </div>\n\n    <!-- комплектация -->\n    <div class=\"p-fluid p-field p-grid\">\n        <label for=\"complectation\" class=\"control-title p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Комплектация</label>\n        <div class=\"p-col\">\n            <textarea id=\"complectation\" [formControlName]=\"formControlNames.complectation\" pInputTextarea class=\"p-inputtextarea p-inputtext p-component\"></textarea>\n        </div>\n    </div>\n\n    <!-- внешний вид -->\n    <div class=\"p-fluid p-field p-grid\">\n        <label for=\"externalStateDescription\" class=\"control-title p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Внешний вид</label>\n        <div class=\"p-col\">\n            <input pInputText id=\"externalStateDescription\" type=\"text\" class=\"\" [formControlName]=\"formControlNames.externalStateDescription\" />\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FilterStatusCommand, FilterStatusCommandData } from 'src/app/communication/commands/filter-status-command-data';\nimport { CommunicatorService } from 'src/app/communication/communicator.service';\nimport { EnumType } from 'src/app/domain/enums/enum-type';\nimport { OrderItemStatusEnum } from 'src/app/domain/enums/order-item-status-enum.enum';\n\n@Component({\n  selector: 'app-reception-quick-filter',\n  templateUrl: './reception-quick-filter.component.html',\n  styleUrls: ['./reception-quick-filter.component.scss']\n})\nexport class ReceptionQuickFilterComponent implements OnInit {\n  currentStatus?:EnumType = null;\n  statuses:EnumType[] = [\n    null,\n    OrderItemStatusEnum.DiagnosticsCompleted,\n    OrderItemStatusEnum.PaymentNeeded\n  ];\n\n  constructor(private communicator : CommunicatorService) { }\n\n  ngOnInit(): void {\n  }\n\n  onTabChange(event:any){\n    this.communicator.sendCommand(new FilterStatusCommand(new FilterStatusCommandData(this.statuses[event.index])));\n  }\n}\n","<p-tabView \n    styleClass=\"quick-filter\"\n    (onChange)=\"onTabChange($event)\">\n    <p-tabPanel *ngFor=\"let status of statuses; let i = index\"\n        [header]=\"!status ? 'Всё' : status.text\"\n        [selected]=\"(!currentStatus && i === 0) || currentStatus && currentStatus.id === status.id\">\n    </p-tabPanel>\n</p-tabView>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reception-registry-card',\n  templateUrl: './reception-registry-card.component.html',\n  styleUrls: ['./reception-registry-card.component.scss']\n})\nexport class ReceptionRegistryCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>reception-registry-card works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { CommandEnum } from 'src/app/communication/command-enum.enum';\nimport { CommandType } from 'src/app/communication/command-type';\nimport { CommunicatorService } from \"../../../../communication/communicator.service\";\nimport { FilterCommand, FilterCommandData } from \"../../../../communication/commands/filter-command\";\n@Component({\n  selector: 'app-reception-registry-filter',\n  templateUrl: './reception-registry-filter.component.html',\n  styleUrls: ['./reception-registry-filter.component.scss']\n})\nexport class ReceptionRegistryFilterComponent implements OnInit {\n  searchedText:string = null;\n  expandFilterOpened:boolean = false;\n  \n  constructor(private communicator : CommunicatorService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSearchButtonClick(event:any){\n    this.communicator.sendCommand(new FilterCommand({ text:this.searchedText }));\n  }\n\n  onSearchTextKeyPressed(event:any){\n    if(event.keyCode === 13){\n      this.communicator.sendCommand(new FilterCommand({ text:this.searchedText }));\n    }\n  }\n}\n","<div class=\"filter-panel\">\n    <div class=\"filter-extend-filter vertical-center\">\n        <p-toggleButton [(ngModel)]=\"expandFilterOpened\" onIcon=\"pi pi-times\" offIcon=\"pi pi-bars\" iconPos=\"right\"></p-toggleButton>\n    </div>\n\n    <div class=\"filter-input vertical-center\">\n        <input type=\"text\" pInputText [(ngModel)]=\"searchedText\" placeholder=\"Введите текст для поиска\" (keydown)=\"onSearchTextKeyPressed($event)\" />\n    </div>\n    \n    <div class=\"filter-search-button vertical-center\">\n        <p-button label=\"Найти\" icon=\"pi pi-search\" iconPos=\"left\" (onClick)=\"onSearchButtonClick($event)\"></p-button>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { CommandEnum } from 'src/app/communication/command-enum.enum';\nimport { CommandType } from 'src/app/communication/command-type';\nimport { CommunicatorService } from 'src/app/communication/communicator.service';\nimport { ChangeRegistryViewCommand, ViewType } from \"../../../communication/commands/change-registry-view-command\";\n\n@Component({\n  selector: 'app-reception-page',\n  templateUrl: './reception-registry-page.component.html',\n  styleUrls: ['./reception-registry-page.component.scss']\n})\nexport class ReceptionPageComponent implements OnInit {\n  showGrid:boolean = true;\n  showCard:boolean = false;\n\n  constructor(private communicator : CommunicatorService, private title : Title) { \n    this.title.setTitle('Реестр заказов');\n  }\n\n  ngOnInit(): void {\n    this.communicator.CommandSource.subscribe(cmd=>this.handleCommand(cmd));\n  }\n\n  handleCommand(cmd : CommandType<any>){\n    if(cmd.type === CommandEnum.ChangeRegistryView){\n      const changeRegistryViewCommandData = (<ChangeRegistryViewCommand>cmd).data;\n\n      this.showCard = changeRegistryViewCommandData.viewType === ViewType.Card;\n      this.showGrid = changeRegistryViewCommandData.viewType === ViewType.Grid;\n    }\n  }\n}\n","<ng-container>\n    <!-- фильтр -->\n    <div class=\"row\">\n        <app-reception-registry-filter></app-reception-registry-filter>\n    </div>\n    <!-- фильтр по статусам, пагинатор, переключение вида -->\n    <div class=\"row\">\n        <app-reception-quick-filter></app-reception-quick-filter>\n        <app-reception-registry-paginator></app-reception-registry-paginator>\n        <app-reception-registry-view-toggle></app-reception-registry-view-toggle>\n    </div>\n    <!-- таблица -->\n    <div class=\"row\" *ngIf=\"showGrid\">\n        <app-reception-registry-table></app-reception-registry-table>\n    </div>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { CommandEnum } from 'src/app/communication/command-enum.enum';\nimport { CommandType } from 'src/app/communication/command-type';\nimport { PagingCommand, PagingCommandData } from 'src/app/communication/commands/paging-command';\nimport { ReceptionRegistryLoadedCommand } from 'src/app/communication/commands/reception-registry-loaded-command';\nimport { CommunicatorService } from 'src/app/communication/communicator.service';\nimport { Constants } from \"../../../../models/constants\";\n\n@Component({\n  selector: 'app-reception-registry-paginator',\n  templateUrl: './reception-registry-paginator.component.html',\n  styleUrls: ['./reception-registry-paginator.component.scss']\n})\nexport class ReceptionRegistryPaginatorComponent implements OnInit {\n  totalRecords:number = 0;\n  pageSize:number = Constants.ReceptionRegistryPageSize;\n\n  constructor(public communicator: CommunicatorService) { }\n\n  ngOnInit(): void {\n    this.communicator.CommandSource.subscribe(cmd=> this.handleCommand(cmd));\n  }\n\n  handleCommand(cmd : CommandType<any>){\n    if(cmd.type == CommandEnum.ReceptionRegistryLoadedCommand){\n      const receptionRegistryLoadedData = (<ReceptionRegistryLoadedCommand>cmd).data;\n      this.totalRecords = receptionRegistryLoadedData.totalRows;\n    }\n  }\n\n  onPageChange(event){\n    this.communicator.sendCommand(new PagingCommand(new PagingCommandData(event.page, event.rows )));\n  }\n}\n","<p-paginator #paginator\n    styleClass=\"reception-registry-paginator\"\n    [rows]=\"pageSize\"\n    [totalRecords]=\"totalRecords\" (onPageChange)=onPageChange($event)>\n</p-paginator>\n","import { Component, OnInit } from '@angular/core';\nimport { CommunicatorService } from 'src/app/communication/communicator.service';\nimport { OrderRegistryItem } from 'src/app/domain/registry/order-registry-item';\nimport { ReceptionService } from 'src/app/services/ReceptionService/reception.service';\nimport { ClientTypeEnum } from \"../../../../domain/enums/client-type-enum.enum\";\nimport { ReceptionRegistryLoadedCommand } from \"../../../../communication/commands/reception-registry-loaded-command\";\nimport { CommandType } from 'src/app/communication/command-type';\nimport { CommandEnum } from 'src/app/communication/command-enum.enum';\nimport { PagingCommand, PagingCommandData } from \"src/app/communication/commands/paging-command\";\nimport { Constants } from 'src/app/models/constants';\nimport { FilterCommand, FilterCommandData } from 'src/app/communication/commands/filter-command';\nimport { FilterStatusCommand, FilterStatusCommandData } from 'src/app/communication/commands/filter-status-command-data';\nimport { EnumType } from 'src/app/domain/enums/enum-type';\n\n@Component({\n  selector: 'app-reception-registry-table',\n  templateUrl: './reception-registry-table.component.html',\n  styleUrls: ['./reception-registry-table.component.scss']\n})\nexport class ReceptionRegistryTableComponent implements OnInit {\n  Items : OrderRegistryItem[];\n  Phisical : EnumType = ClientTypeEnum.Phisical;\n  Juridical : EnumType = ClientTypeEnum.Juridical;\n\n  private paging : PagingCommandData = { skip : 0, take : Constants.ReceptionRegistryPageSize };\n  private filter : FilterCommandData = { text : null };\n  private filterStatus: FilterStatusCommandData;\n\n  constructor(private receptionService : ReceptionService, public communicator: CommunicatorService) { }\n\n  ngOnInit(): void {\n    this.communicator.CommandSource.subscribe(cmd => this.handleCommand(cmd));\n    this.loadRegistry(0, Constants.ReceptionRegistryPageSize, null, null);\n  }\n  \n  loadRegistry(skip:number, take:number, text:string, status:number){\n    this.receptionService.getByFilter({\n      skip:skip,\n      take:take,\n      text:text,\n      status:status\n    }).then(r=>{\n      this.Items = r.items;\n      this.communicator.sendCommand(new ReceptionRegistryLoadedCommand({ totalRows: r.total }));\n    });\n  }\n\n  handleCommand(cmd: CommandType<any>){\n    let needLoad = true;\n    switch(cmd.type){\n      case CommandEnum.PagingCommand:{\n        this.paging = (<PagingCommand>cmd).data;\n        break;\n      }\n      case CommandEnum.FilterCommand:{\n        this.filter = (<FilterCommand>cmd).data;\n        break;\n      }\n      case CommandEnum.FilterStatusCommand:{\n        this.filterStatus = (<FilterStatusCommand>cmd).data;\n        break;\n      }\n      default:{\n        needLoad = false;\n      }\n    }\n\n    if(needLoad){\n      this.loadRegistry(this.paging.skip, this.paging.take, this.filter.text, this.filterStatus.status && this.filterStatus.status.id);\n    }\n  }\n\n  onEditButtonClick(event:any, id:number){\n    alert(`Выбран заказа ${id}`);\n  }\n}\n","<p-table \n    [value]=\"Items\"\n    [rowHover]=\"true\"\n    dataKey=\"id\"\n    styleClass=\"p-datatable-sm p-datatable-gridlines\">\n\n    <ng-template pTemplate=\"colgroup\">\n        <colgroup>\n            <col style=\"width: 5%;\">\n            <col style=\"width: 5%;\">\n            <col style=\"width: 30%;\">\n            <col style=\"width: 30%;\">\n            <col style=\"width: 15%;\">\n            <col style=\"width: 10%;\">\n            <col style=\"width: 5%;\">\n        </colgroup>\n    </ng-template>\n\n    <ng-template pTemplate=\"header\">\n        <tr class=\"table-header\">\n            <th>Номер</th>\n            <th>Дата приемки</th>\n            <th>Клиент</th>\n            <th>Оборудование/Жалоба</th>\n            <th>Статус</th>\n            <th>Стоимость</th>\n            <th></th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-item>\n        <tr>\n            <td>{{item.id}}</td>\n            <td>{{item.creationDate | date:'dd.MM.yyyy'}}</td>\n            <td>\n                <ul class=\"cell-list\">\n                   <li *ngIf=\"item.client.type.id == Phisical.id\">{{item.client.lastName}} {{item.client.firstName}} {{item.client.middleName}}</li> \n                   <li *ngIf=\"item.client.type.id == Juridical.id\">{{item.client.name}}</li> \n                   <li *ngIf=\"item.client.phone\">{{item.client.phone}}</li> \n                   <li *ngIf=\"item.client.email\">{{item.client.email}}</li> \n                </ul>\n            </td>\n            <td>\n                <ul class=\"cell-list\">\n                    <li>{{item.equipment.name}}</li>\n                    <li>{{item.defectDescription}}</li>\n                </ul>\n            </td>\n            <td>{{item.status.text}}</td>\n            <td>{{item.repairCost}}</td>\n            <td>\n                <button pButton pRipple type=\"button\" class=\"p-button-rounded p-button-outlined\" icon=\"pi pi-pencil\" [routerLink]=\"['/reception/edit', item.id]\"></button>\n            </td>\n        </tr>\n    </ng-template>\n</p-table>","import { Component, OnInit } from '@angular/core';\nimport { ChangeRegistryViewCommand, ChangeRegistryViewCommandData, ViewType } from 'src/app/communication/commands/change-registry-view-command';\nimport { CommunicatorService } from 'src/app/communication/communicator.service';\n\n@Component({\n  selector: 'app-reception-registry-view-toggle',\n  templateUrl: './reception-registry-view-toggle.component.html',\n  styleUrls: ['./reception-registry-view-toggle.component.scss']\n})\nexport class ReceptionRegistryViewToggleComponent implements OnInit {\n  public GridView:boolean = true;\n\n  constructor(private communicator : CommunicatorService) { }\n\n  ngOnInit(): void {\n  }\n\n  public toggle(){\n    this.GridView = !this.GridView;\n    if(this.GridView)    {\n      this.communicator.sendCommand(new ChangeRegistryViewCommand(new ChangeRegistryViewCommandData(ViewType.Grid)));\n    }\n      else{\n      this.communicator.sendCommand(new ChangeRegistryViewCommand(new ChangeRegistryViewCommandData(ViewType.Card)));\n    }\n  }\n}\n","<div class=\"view-toggle-container\">\n    <img id=\"grid-toggle\" \n        class=\"grid-toggle\" \n        [class]={selected:GridView} \n        src=\"../../../../../assets/images/icons8-grid-view-32.png\" \n        (click)=toggle()>\n    <img id=\"list-toggle\" \n        class=\"list-toggle\" \n        [class]={selected:!GridView} \n        src=\"../../../../../assets/images/icons8-card-view-32.png\" \n        (click)=toggle()>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReceptionEditPageComponent } from './reception-edit-page/reception-edit-page.component';\nimport { ReceptionPageComponent } from './reception-registry-page/reception-registry-page.component';\n\nconst routes: Routes = [\n  {\n    path: 'registry',\n    component: ReceptionPageComponent\n  },\n  {\n    path: 'edit/:id',\n    component: ReceptionEditPageComponent\n  },\n  {\n    path: 'create',\n    component: ReceptionEditPageComponent\n  },\n  {\n    path: '', redirectTo:'registry', pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReceptionRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReceptionPageComponent } from './reception-registry-page/reception-registry-page.component';\nimport { ReceptionRoutingModule } from './reception-routing.module';\nimport { ReceptionRegistryFilterComponent } from './reception-registry-page/reception-registry-filter/reception-registry-filter.component';\nimport { ReceptionQuickFilterComponent } from './reception-registry-page/reception-quick-filter/reception-quick-filter.component';\nimport { ReceptionRegistryViewToggleComponent } from './reception-registry-page/reception-registry-view-toggle/reception-registry-view-toggle.component';\nimport { ReceptionRegistryTableComponent } from './reception-registry-page/reception-registry-table/reception-registry-table.component';\nimport { ReceptionRegistryCardComponent } from './reception-registry-page/reception-registry-card/reception-registry-card.component';\nimport { TabViewModule } from 'primeng/tabview';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { TableModule } from 'primeng/table';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ToggleButtonModule } from 'primeng/togglebutton';\nimport { ButtonModule } from 'primeng/button';\nimport { ReceptionService } from \"../../services/ReceptionService/reception.service\";\nimport { ReceptionRegistryPaginatorComponent } from './reception-registry-page/reception-registry-paginator/reception-registry-paginator.component';\nimport { ReceptionEditPageComponent } from './reception-edit-page/reception-edit-page.component';\nimport { ReceptionEditComponent } from './reception-edit-page/reception-edit/reception-edit.component';\nimport { ClientComponent } from './reception-edit-page/reception-edit/client/client.component';\nimport { EquipmentComponent } from './reception-edit-page/reception-edit/equipment/equipment.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { EquipmentService } from \"../../services/EquipmentService/equipment.service\";\nimport { TreeTableModule } from 'primeng/treetable';\nimport {DialogModule} from 'primeng/dialog';\nimport {TreeModule} from 'primeng/tree';\nimport { JuridicalPersonComponent } from './reception-edit-page/reception-edit/client/juridical-person/juridical-person.component';\nimport { PhysicalPersonComponent } from './reception-edit-page/reception-edit/client/physical-person/physical-person.component';\nimport { OrderStatusViewComponent } from './reception-edit-page/reception-edit/order-status-view/order-status-view.component';\nimport { PhysicalPresonPipe } from 'src/app/core/physical-preson.pipe';\n\n@NgModule({\n  declarations: [\n    ReceptionPageComponent, \n    ReceptionRegistryFilterComponent, \n    ReceptionQuickFilterComponent, \n    ReceptionRegistryViewToggleComponent, \n    ReceptionRegistryTableComponent, \n    ReceptionRegistryCardComponent, \n    ReceptionRegistryPaginatorComponent, \n    ReceptionEditPageComponent, \n    EquipmentComponent, \n    ClientComponent, \n    ReceptionEditComponent, \n    JuridicalPersonComponent, \n    PhysicalPersonComponent, \n    OrderStatusViewComponent,\n    PhysicalPresonPipe\n  ],\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    ReceptionRoutingModule,\n    TabViewModule,\n    PaginatorModule,\n    TableModule,\n    InputTextModule,\n    ToggleButtonModule,\n    ButtonModule,\n    ConfirmDialogModule,\n    TreeTableModule,\n    TreeModule,\n    DialogModule\n  ],\n  providers:[\n    ReceptionService,\n    EquipmentService\n  ]\n})\nexport class ReceptionModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-repair-page',\n  templateUrl: './repair-page.component.html',\n  styleUrls: ['./repair-page.component.scss']\n})\nexport class RepairPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>repair-page works!</p>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RepairPageComponent } from \"./repair-page/repair-page.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RepairPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RepairRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RepairRoutingModule } from './repair-routing.module';\nimport { RepairPageComponent } from './repair-page/repair-page.component';\n\n\n@NgModule({\n  declarations: [RepairPageComponent],\n  imports: [\n    CommonModule,\n    RepairRoutingModule\n  ]\n})\nexport class RepairModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-warehouse-page',\n  templateUrl: './warehouse-page.component.html',\n  styleUrls: ['./warehouse-page.component.scss']\n})\nexport class WarehousePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>warehouse-page works!</p>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { WarehousePageComponent } from \"./warehouse-page/warehouse-page.component\";\nconst routes: Routes = [\n  {\n    path: '',\n    component: WarehousePageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WarehouseRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WarehouseRoutingModule } from './warehouse-routing.module';\nimport { WarehousePageComponent } from './warehouse-page/warehouse-page.component';\n\n\n@NgModule({\n  declarations: [WarehousePageComponent],\n  imports: [\n    CommonModule,\n    WarehouseRoutingModule\n  ]\n})\nexport class WarehouseModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Client } from '../../domain/client';\nimport { ClientTypeEnum } from '../../domain/enums/client-type-enum.enum';\nimport {JuridicalPerson} from '../../domain/order/juridical-person';\nimport {PhysicalPerson} from '../../domain/order/physical-person';\n\n@Injectable()\nexport class ClientService {\n  public static clients: Client []=[\n    {\n      id:1,\n      type:ClientTypeEnum.Phisical,\n      firstName:'Виктор', \n      lastName:'Иванов', \n      middleName:'Петрович',\n      phone:'+7-958-661-45-87',\n      email:null,\n      inn:null,\n      kpp: null,\n      name: null\n    },\n    {\n      id: 2,\n      type: ClientTypeEnum.Phisical,\n      lastName:'Петров', \n      firstName:'Иван', \n      middleName:'Иванович',\n      email:'ivanov@ya.ru',\n      phone: null,\n      inn:null,\n      kpp: null,\n      name: null\n    },\n    {\n      id:3,\n      type: ClientTypeEnum.Phisical,\n      lastName:'Сидоренко', \n      firstName:'Андрей', \n      middleName:'Павлович',\n      email:null,\n      phone:'+7-922-789-56-21',\n      inn:null,\n      kpp: null,\n      name: null\n    },\n    {\n      id:4,\n      type: ClientTypeEnum.Phisical,\n      lastName:'Варчук', \n      firstName:'Олег', \n      middleName:'Ильич',\n      email:'face@mai.ru',\n      phone:null,\n      inn:null,\n      kpp: null,\n      name: null\n    },\n    {\n      id:5,\n      type: ClientTypeEnum.Phisical,\n      lastName:'Кривчиков', \n      firstName:'Евгений', \n      middleName:'Петрович',\n      email:'t.center@mai.ru',\n      phone:null,\n      inn:null,\n      kpp: null,\n      name: null\n    },\n    {\n      id:6,\n      type: ClientTypeEnum.Phisical,\n      lastName:'Строгова', \n      firstName:'Татьяна', \n      middleName:'Андреевна',\n      email:'t.strogova@gmail.com',\n      phone:null,\n      inn:null,\n      kpp: null,\n      name: null\n    },\n    {\n      id:7,\n      type: ClientTypeEnum.Phisical,\n      lastName:'Путин', \n      firstName:'Вовка', \n      middleName:'Вовкович',\n      email:'putin@kremlin.ru',\n      phone:null,\n      inn:null,\n      kpp: null,\n      name: null\n    }\n  ];\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Возвраща заказчика по его идентификатору.\n   * @param id Идентификатор заказчика.\n   */\n  public getClientById(id:number):Observable<Client>{\n    const client = ClientService.clients.find((e,i,a)=> e.id == id);\n\n    const bs = new BehaviorSubject<Client>(client);\n    return bs.asObservable();\n  }\n\n  /**\n   * Возвращает заказчиков отфильтрованных по вхождению строки.\n   * @param filterString Строка поиска.\n   */\n  public getClientsByFilter(filterString:string):Observable<Client[]>{\n    const matchedClients = ClientService.clients.filter((e,i,a)=> {\n      if(e.type.id === ClientTypeEnum.Juridical.id){\n        return this.matchAgainstJuridicalPerson(filterString, <JuridicalPerson>e);\n      } else {\n        return this.matchAgainstPhysicalPerson(filterString, <PhysicalPerson>e);\n      };\n    });\n\n    const bs = new BehaviorSubject<Client[]>(matchedClients);\n    return bs.asObservable();\n  }\n\n  /**\n   * Обновляет заказачика.\n   * @param client Модель заказчика.\n   */\n  public updateClient(client: Client): Promise<number>{\n    return new BehaviorSubject<number>(1).asObservable().toPromise();\n  }\n\n  /**\n   * Создает нового заказчика.\n   * @param client Модель заказчика.\n   */\n  public createClient(client: Client): Promise<number>{\n    return new BehaviorSubject<number>(1).asObservable().toPromise();\n  }\n\n  private matchAgainstJuridicalPerson(filterString: string, juridicalPerson: JuridicalPerson):boolean{\n    const lowerCasedFilter = filterString.toLowerCase();\n    return juridicalPerson.name.toLowerCase().startsWith(lowerCasedFilter) ||\n          juridicalPerson.inn.toLowerCase().startsWith(lowerCasedFilter) ||\n          juridicalPerson.kpp.toLowerCase().startsWith(lowerCasedFilter) ||\n          juridicalPerson.email.toLowerCase().startsWith(lowerCasedFilter) ||\n          juridicalPerson.phone.toLowerCase().startsWith(lowerCasedFilter);\n  }\n\n  private matchAgainstPhysicalPerson(filterString: string, physicalPerson: PhysicalPerson):boolean{\n    const lowerCasedFilter = filterString.toLowerCase();\n    return physicalPerson.firstName.toLowerCase().startsWith(lowerCasedFilter) ||\n          physicalPerson.lastName.toLowerCase().startsWith(lowerCasedFilter) ||\n          physicalPerson.middleName.toLowerCase().startsWith(lowerCasedFilter) ||\n          physicalPerson.email.toLowerCase().startsWith(lowerCasedFilter) ||\n          physicalPerson.phone.toLowerCase().startsWith(lowerCasedFilter);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Equipment } from '../../domain/order/equipment';\nimport { EquipmentRequest } from \"../EquipmentService/equipment-request\";\n\n@Injectable()\nexport class EquipmentService {\n\n  constructor(private http: HttpClient) { }\n\n  get(id: number): Observable<Equipment>{\n    const result = new BehaviorSubject<Equipment>(null);\n    result.next(EquipmentService.equipments.find((element, index)=> element.id === id));\n\n    return result.asObservable();\n  }\n\n  getByFilter(request:EquipmentRequest): Observable<Equipment[]>{\n    const result:Equipment[] = [];\n    for(let index = 0; index < EquipmentService.equipments.length; index++){\n      let matchedByNode:boolean = true;\n      let matchedByParentId:boolean = true;\n      let matchedByName:boolean = true;\n\n      const equipment = EquipmentService.equipments[index];\n\n      if(request){\n        if(request.node !== null)\n        {\n          matchedByNode = equipment.isNode === request.node;\n        }\n        if(request.name)\n        {\n          matchedByName = equipment.name.toLowerCase().startsWith(request.name.toLowerCase());\n        }\n        if(request.parentIds){\n          matchedByParentId = request.parentIds.findIndex((v, i, a)=> v === equipment.parentId) !== -1;\n        }\n      }\n\n      if(matchedByNode && matchedByParentId && matchedByName){\n        result.push(EquipmentService.equipments[index]);\n      }\n    }\n\n    return new BehaviorSubject<Equipment[]>(result).asObservable();\n  }\n\n  static equipments: Equipment[] = [\n    new Equipment(1, 'Ноутбуки', true, null, ['ноутбук','блок питания','силовой кабель']),\n      new Equipment(4, 'Asus', true, 1, null),\n        new Equipment(13, 'Asus F35', false, 4, null),\n        new Equipment(14, 'Asus X55', false, 4, null),\n    new Equipment(5, 'Acer', true, 1, null),\n        new Equipment(15, 'Acer Aspire 5320', false, 5, null),\n        new Equipment(16, 'Acer Aspire 3 A351', false, 5, null),\n        new Equipment(17, 'Acer Aspire 7 A784', false, 5, null),\n    new Equipment(6, 'Lenovo', true, 1, null),\n      new Equipment(18, 'Lenovo Ideapad V17', false, 6, null),\n      new Equipment(19, 'Lenovo Ideapad G530', false, 6, null),\n    new Equipment(2, 'Планшеты', true, null, ['планшет','блок питания','силовой кабель']),\n      new Equipment(7, 'Huawei MatePad Pro', false, 2, null),\n      new Equipment(8, 'Lenovo Tab M10 HD', false, 2, null),\n      new Equipment(9, 'Apple iPad 3', false, 2, null),\n    new Equipment(3, 'Бытовая техника', true, null, null),\n      new Equipment(10, 'Холодильники', true, 3, ['холодильник','полки','держатели продукты']),\n        new Equipment(7, 'Стинол 355', false, 10, null),\n      new Equipment(11, 'Стириальные машины', true, 3, ['сма','кювета','контейнер']),\n        new Equipment(7, 'Zanussi ZWY50924CI', false, 11, null),\n      new Equipment(12, 'Утюги', true, 3, ['утюг','кювета']),\n        new Equipment(7, 'Philips Azur GC4560', false, 12, null),\n  ];\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { OrderRegistry } from \"../../domain/registry/order-registry\";\nimport { OrderRegistryItem } from \"../../domain/registry/order-registry-item\";\nimport { ClientTypeEnum } from \"../../domain/enums/client-type-enum.enum\";\nimport { OrderItemStatusEnum } from '../../domain/enums/order-item-status-enum.enum';\nimport { ReceptionRegistryRequest } from \"./reception-registry-request\";\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Order } from '../../domain/order/order';\nimport { JuridicalPerson } from '../../domain/order/juridical-person';\nimport { PhysicalPerson } from '../../domain/order/physical-person';\nimport { Client } from 'src/app/domain/client';\nimport { ClientService } from 'src/app/services/ClientService/client.service';\n\n@Injectable()\nexport class ReceptionService {\n  private static items : OrderRegistryItem[]  = [\n    {\n      id:1,\n      creationDate:new Date(2020, 9, 1),\n      client: ClientService.clients[0],\n      status: OrderItemStatusEnum.Diagnostics,\n      equipment:{\n        id:1,\n        name:'Холодильник Стинол 352'\n      },\n      defectDescription:'не включается',\n      externalStateDescription:'б/у, потертости',\n      diagnosticResult:null,\n      complectation:'холодильник, коробка, полки, подон, держатели продуктов (6 штук)',\n      parts:[],\n      repairCost:null\n    },\n    {\n      id:2,\n      creationDate:new Date(2020, 9, 1),\n      client:ClientService.clients[1],\n      status: OrderItemStatusEnum.DiagnosticsCompleted,\n      equipment:{\n        id:2,\n        name:'Магнитола philips RMP-522'\n      },\n      defectDescription:'слышен гул',\n      externalStateDescription:'б/у, потертости',\n      diagnosticResult:null,\n      complectation:'магнитола',\n      parts:[],\n      repairCost:3500\n    },\n    {\n      id:3,\n      creationDate:new Date(2020, 9, 2),\n      client:ClientService.clients[2],\n      status: OrderItemStatusEnum.PaymentNeeded,\n      equipment:{\n        id:3,\n        name:'Планшет ASUS 301LED'\n      },\n      defectDescription:'разбит экран',\n      externalStateDescription:'б/у, потертости',\n      diagnosticResult:null,\n      complectation:'планшет',\n      parts:[],\n      repairCost:1900\n    },\n    {\n      id:4,\n      creationDate:new Date(2020, 9, 2),\n      client:ClientService.clients[3],\n      equipment:{\n        id:4,\n        name:'Ноутбук Acer 5320'\n      },\n      status: OrderItemStatusEnum.RepairInProgress,\n      defectDescription:'зависает через 5-10 минут',\n      externalStateDescription:'б/у, потертости',\n      diagnosticResult:null,\n      complectation:'ноутбук, БП',\n      parts:[],\n      repairCost:4800\n    },\n    {\n      id:5,\n      creationDate:new Date(2020, 9, 3),\n      client:ClientService.clients[4],\n      equipment:{\n        id:5,\n        name:'Ноутбук Asus F35'\n      },\n      status: OrderItemStatusEnum.RepairInProgress,\n      defectDescription:'зависает через 5-10 минут',\n      externalStateDescription:'б/у, потертости',\n      diagnosticResult:null,\n      complectation:'ноутбук, БП',\n      parts:[],\n      repairCost:5800\n    },\n    {\n      id:6,\n      creationDate:new Date(2020, 9, 3),\n      client:ClientService.clients[5],\n      equipment:{\n        id:6,\n        name:'Ноутбук Asus F55'\n      },\n      status: OrderItemStatusEnum.RepairInProgress,\n      defectDescription:'разбита матрица',\n      externalStateDescription:'б/у, потертости',\n      diagnosticResult:null,\n      complectation:'ноутбук, БП',\n      parts:[],\n      repairCost:5100\n    },\n    {\n      id:7,\n      creationDate:new Date(2020, 9, 3),\n      client:ClientService.clients[6],\n      equipment:{\n        id:5,\n        name:'Ноутбук Asus F35'\n      },\n      status: OrderItemStatusEnum.RepairInProgress,\n      defectDescription:'разбита матрица',\n      externalStateDescription:'б/у, потертости',\n      diagnosticResult:null,\n      complectation:'ноутбук, БП',\n      parts:[],\n      repairCost:6100\n    }\n  ];\n\n  constructor(private http: HttpClient) { }\n\n  public getByFilter(request: ReceptionRegistryRequest) : Promise<OrderRegistry>{\n\n    let promise = new Promise<OrderRegistry>((resolve, reject)=>{\n\n        // filtering\n        const filterdItems:OrderRegistryItem[] = [];\n        for(let index = 0; index < ReceptionService.items.length; index++){\n          const item = ReceptionService.items[index];\n          let matchedByText = true;\n          let matchedByStatus = true;\n\n          if(request.text){\n            let name:string = null;\n            if(item.client.type.id === ClientTypeEnum.Juridical.id){\n              name = (<JuridicalPerson>item.client).name;\n            }\n            else{\n              name = (<PhysicalPerson>item.client).firstName;\n            }\n            matchedByText = name.toLowerCase().startsWith(request.text.toLowerCase());\n          }\n\n          if(request.status){\n            matchedByStatus =  item.status.id === request.status;\n          }\n          if(matchedByStatus && matchedByText){\n            filterdItems.push(item);\n          }\n        }\n\n        const pagedResult : OrderRegistry = {\n          total:filterdItems.length,\n          items : filterdItems.slice(request.skip, request.skip + request.take)\n        };\n\n        resolve(pagedResult);\n    });\n\n    return promise;\n  }\n\n  get(id:number): Observable<Order>{\n    const result = new BehaviorSubject<Order>(null);\n\n    const orderRegistryItem = ReceptionService.items.find((item, index) => item.id == id);\n    if(orderRegistryItem){\n      const order:Order = {\n        id:orderRegistryItem.id,\n        repairCost:orderRegistryItem.repairCost,\n        client:this.createClient(orderRegistryItem.client),\n        complectation:orderRegistryItem.complectation,\n        creationDate:orderRegistryItem.creationDate,\n        defectDescription:orderRegistryItem.defectDescription,\n        equipment: {\n          id: orderRegistryItem.equipment.id, \n          name: orderRegistryItem.equipment.name,\n          isNode: false,\n          parentId: null,\n          availableComplectation: null\n        },\n        externalStateDescription:orderRegistryItem.externalStateDescription,\n        status:orderRegistryItem.status,\n        diagnosticResult:orderRegistryItem.diagnosticResult\n      };\n\n      result.next(order);\n    }\n\n    return result.asObservable();\n  }\n\n  private createClient(client: Client): JuridicalPerson | PhysicalPerson{\n    if(client.type.id === ClientTypeEnum.Juridical.id){\n      const juridicalPerson = <JuridicalPerson>client;\n      const jp: JuridicalPerson = {\n        id:1,\n        type:ClientTypeEnum.Juridical,\n        email:client.email,\n        inn:juridicalPerson.inn,\n        kpp:juridicalPerson.kpp,\n        name:juridicalPerson.name,\n        phone:juridicalPerson.phone\n      };\n\n      return jp;\n    }\n    else{\n      const physicalPerson = <PhysicalPerson>client;\n      const pp:PhysicalPerson = {\n        id:1,\n        type: ClientTypeEnum.Phisical,\n        firstName:physicalPerson.firstName,\n        lastName:physicalPerson.lastName,\n        middleName:physicalPerson.middleName,\n        email:physicalPerson.email,\n        phone:physicalPerson.phone\n      };\n\n      return pp;\n    }\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}